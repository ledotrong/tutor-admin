{"version":3,"sources":["views/Dashboard/Dashboard.js"],"names":["Dashboard","props","componentWillMount","a","async","token","JSON","parse","localStorage","getItem","setState","history","push","getRevenue","loading","requestOptions","method","headers","Authorization","state","fetch","response","handleResponse","revenue","console","log","rangeFilter","this","text","then","data","ok","e","target","value","sum","length","forEach","item","index","contract","toString","price","className","active","spinner","styles","overlay","base","background","color","width","stroke","title","bordered","type","justify","xl","precision","style","forceFit","height","skill","position","dataKey","offsetX","lineWidth","Group","defaultValue","size","buttonStyle","onChange","onChangeFilter","Button","scale","shape","Component"],"mappings":"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","file":"static/js/22.ca9f16db.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Col } from 'reactstrap';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Card, Row, Typography, Radio, Statistic, Select } from 'antd';\nimport {\n  Chart,\n  Tooltip,\n  Axis,\n  Point,\n  SmoothLine,\n  Legend,\n  Sector,\n  Coord\n} from 'viser-react';\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n      revenue: [],\n      loading: false,\n      rangeFilter: 'all'\n    };\n  }\n\n  componentWillMount = async () => {\n    // const token = localStorage.removeItem(\"token\");\n    const token = JSON.parse(localStorage.getItem('token'));\n\n    if (token) {\n      this.setState({ token });\n    } else {\n      this.props.history.push('/login');\n    }\n  };\n\n  componentDidMount() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    if (token) this.setState({ token });\n    this.getRevenue();\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n        return false;\n      }\n      return data;\n    });\n  }\n\n  getRevenue = async () => {\n    this.setState({ loading: true });\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.state.token}`\n      }\n    };\n    try {\n      const response = await fetch(\n        'https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/revenue',\n        requestOptions\n      );\n\n      let revenue = await this.handleResponse(response);\n      this.setState({ loading: false, revenue: revenue });\n    } catch (err) {\n      this.setState({ loading: false });\n      console.log(err);\n    }\n  };\n\n  onChangeFilter(e) {\n    this.setState({ rangeFilter: e.target.value });\n  }\n\n  render() {\n    let data = [];\n    let sum = 0;\n    const skills = [\n      { skill: 'ReactJS', revenue: 41.8 },\n      { skill: 'Angular', revenue: 38 },\n      { skill: 'React Native', revenue: 33.7 },\n      { skill: 'VueJS', revenue: 30.7 },\n      { skill: 'C#', revenue: 25.8 },\n      { skill: '.NET', revenue: 31.7 },\n      { skill: 'Unity', revenue: 33 },\n      { skill: 'English', revenue: 46 },\n      { skill: 'Guitar', revenue: 38.3 }\n    ];\n    if (this.state.revenue.length) {\n      const revenue = this.state.revenue;\n      revenue.forEach((item, index) => {\n        data.push({ contract: (index + 1).toString(), value: item.price });\n        sum = sum + item.price;\n      });\n    }\n\n    const scale = [\n      {\n        dataKey: 'value'\n      },\n      {\n        dataKey: 'contract'\n      }\n    ];\n\n    return (\n      <div className=\"animated fadeIn mt-4\">\n        <LoadingOverlay\n          active={this.state.loading}\n          spinner\n          text=\"Loading...\"\n          styles={{\n            overlay: base => ({\n              ...base,\n              background: 'rgba(255, 255, 255, 0.5)',\n              color: 'black'\n            }),\n            spinner: base => ({\n              ...base,\n              width: '100px',\n              '& svg circle': {\n                stroke: 'rgba(255, 0, 0, 0.5)'\n              }\n            })\n          }}\n        >\n          <Card title=\"Dashboard\" bordered={false}>\n            <Row type=\"flex\" justify=\"center\" className=\"mt-4\">\n              <Col xl={5}>\n                <h3>Statistic</h3>\n                <Row>\n                  <Row type=\"flex\" justify=\"start\">\n                    <Statistic\n                      title=\"Revenue (VND)\"\n                      value={sum}\n                      precision={0}\n                    />\n                    <Statistic\n                      title=\"Contracts\"\n                      value={data.length}\n                      precision={0}\n                      className=\"ml-4\"\n                    />\n                  </Row>\n                  <h6 className=\"mt-4\" style={{ color: 'grey' }}>\n                    Top Revenue per Skill\n                  </h6>\n                  <Chart forceFit height={350} data={skills}>\n                    <Tooltip />\n                    <Legend position=\"bottom\" dataKey=\"skill\" offsetX={0} />\n                    <Coord type=\"polar\" />\n                    <Sector\n                      position=\"skill*revenue\"\n                      color=\"skill\"\n                      style={{ stroke: '#fff', lineWidth: 1 }}\n                    />\n                  </Chart>\n                </Row>\n              </Col>\n              <Col xl={6}>\n                <Radio.Group\n                  className=\"d-flex justify-content-end mb-2\"\n                  defaultValue=\"a\"\n                  size=\"small\"\n                  buttonStyle=\"solid\"\n                  onChange={e => this.onChangeFilter(e)}\n                  value={this.state.rangeFilter}\n                >\n                  <Radio.Button value=\"all\">All</Radio.Button>\n                  <Radio.Button value=\"week\">Week</Radio.Button>\n                  <Radio.Button value=\"month\">Month</Radio.Button>\n                </Radio.Group>\n                <Card title=\"Revenue\" bordered={true}>\n                  <Chart forceFit height={400} data={data} scale={scale}>\n                    <Tooltip />\n                    <Axis />\n                    <SmoothLine color=\"#00d77d\" position=\"contract*value\" />\n                    <Point\n                      color=\"#00d77d\"\n                      position=\"contract*value\"\n                      shape=\"circle\"\n                    />\n                  </Chart>\n                </Card>\n              </Col>\n            </Row>\n          </Card>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}