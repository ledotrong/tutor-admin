{"version":3,"sources":["views/Skills/Skills.js"],"names":["Skills","props","componentWillMount","a","async","token","JSON","parse","localStorage","getItem","setState","history","push","getSkills","requestOptions","method","headers","Authorization","state","fetch","response","handleResponse","skills","filter","data","isDeleted","setFormat","loading","console","log","deleteModal","editModal","addModal","name","link","key","currentItem","toggleDelete","bind","toggleEdit","toggleAdd","onChangeHandler","onCreate","onEdit","onDelete","this","forEach","element","index","id","undefined","actions","className","onClick","toggleEditItem","type","icon","style","backgroundColor","borderColor","color","toggleDeleteItem","text","then","ok","e","target","value","item","alert","preventDefault","body","stringify","_id","active","spinner","styles","overlay","base","background","width","stroke","xs","lg","responsive","hover","bordered","columns","label","field","sort","rows","isOpen","onSubmit","placeholder","required","onChange","disabled","Component"],"mappings":"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","file":"static/js/24.9fc6586c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { MDBDataTable } from 'mdbreact';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Input,\n  Form\n} from 'reactstrap';\n\nclass Skills extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n      deleteModal: false,\n      editModal: false,\n      addModal: false,\n      name: '',\n      link: '',\n      key: '',\n      skills: [],\n      loading: true,\n      currentItem: null,\n      token: null,\n      alert: null\n    };\n\n    this.toggleDelete = this.toggleDelete.bind(this);\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.toggleAdd = this.toggleAdd.bind(this);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onCreate = this.onCreate.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n  }\n\n  componentWillMount = async () => {\n    // const token = localStorage.removeItem(\"token\");\n    const token = JSON.parse(localStorage.getItem('token'));\n\n    if (token) {\n      this.setState({ token });\n    } else {\n      this.props.history.push('/login');\n    }\n  };\n\n  componentDidMount() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    if (token) this.setState({ token });\n    this.getSkills();\n  }\n\n  setFormat(skills) {\n    skills.forEach((element, index) => {\n      element.id = index + 1;\n      element.isDeleted = undefined;\n      element.actions = (\n        <div className=\"float-right\">\n          <Button\n            className=\"mr-2\"\n            onClick={() => this.toggleEditItem(element)}\n            type=\"primary\"\n            icon=\"edit\"\n            style={{\n              backgroundColor: '#00C5D7',\n              borderColor: '#00C5D7',\n              color: 'white'\n            }}\n          >\n            Edit\n          </Button>\n          <Button\n            icon=\"delete\"\n            onClick={() => this.toggleDeleteItem(element)}\n            type=\"danger\"\n            style={{\n              backgroundColor: '#d71200',\n              borderColor: '#d71200',\n              color: 'white'\n            }}\n          >\n            Delete\n          </Button>\n        </div>\n      );\n    });\n  }\n\n  getSkills = async () => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.state.token}`\n      }\n    };\n    try {\n      const response = await fetch(\n        'https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/skills',\n        requestOptions\n      );\n\n      let skills = await this.handleResponse(response);\n      skills = skills.filter(data => data.isDeleted !== true);\n\n      this.setFormat(skills);\n\n      this.setState({ loading: false, skills: skills });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n        return false;\n      }\n      return data;\n    });\n  }\n\n  onChangeHandler(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  toggleDelete() {\n    this.setState({\n      deleteModal: !this.state.deleteModal\n    });\n  }\n\n  toggleDeleteItem(item) {\n    this.toggleDelete();\n    this.setState({ currentItem: item });\n  }\n\n  toggleEdit() {\n    this.setState({\n      editModal: !this.state.editModal\n    });\n  }\n\n  toggleEditItem(item) {\n    this.toggleEdit();\n    this.setState({ currentItem: item });\n  }\n\n  toggleAdd() {\n    this.setState({\n      addModal: !this.state.addModal,\n      alert: null\n    });\n  }\n\n  async onCreate(e) {\n    e.preventDefault();\n    this.setState({ loading: true });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.state.token}`\n      },\n      body: JSON.stringify({ name: this.state.name })\n    };\n    try {\n      const response = await fetch(\n        'https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/skill',\n        requestOptions\n      );\n\n      let skills = await this.handleResponse(response);\n\n      if (skills) {\n        this.getSkills();\n        this.setState({\n          addModal: false,\n          alert: null\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async onEdit(e) {\n    e.preventDefault();\n    this.setState({ loading: true });\n    console.log('Update');\n    const requestOptions = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.state.token}`\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        key: this.state.currentItem._id\n      })\n    };\n    try {\n      const response = await fetch(\n        'https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/skill/update',\n        requestOptions\n      );\n\n      let skills = await this.handleResponse(response);\n      if (skills) {\n        this.getSkills();\n        this.setState({\n          editModal: false,\n          alert: null\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async onDelete(e) {\n    e.preventDefault();\n    this.setState({ loading: true });\n    const requestOptions = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.state.token}`\n      },\n      body: JSON.stringify({\n        key: this.state.currentItem._id\n      })\n    };\n    try {\n      const response = await fetch(\n        'https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/skill/delete',\n        requestOptions\n      );\n\n      let skills = await this.handleResponse(response);\n      if (skills) {\n        this.getSkills();\n        this.setState({\n          deleteModal: false,\n          alert: null\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <LoadingOverlay\n          active={this.state.loading}\n          spinner\n          text=\"Loading...\"\n          styles={{\n            overlay: base => ({\n              ...base,\n              background: 'rgba(255, 255, 255, 0.5)',\n              color: 'black'\n            }),\n            spinner: base => ({\n              ...base,\n              width: '100px',\n              '& svg circle': {\n                stroke: 'rgba(255, 0, 0, 0.5)'\n              }\n            })\n          }}\n        >\n          <Row className=\"justify-content-center\">\n            <Col xs=\"6\" lg=\"8\">\n              <Card>\n                <CardHeader className=\"bg-dark\">\n                  <i className=\"fa fa-align-justify\"></i>Skills\n                </CardHeader>\n\n                <CardBody>\n                  <Button\n                    onClick={this.toggleAdd}\n                    type=\"primary\"\n                    className=\"mb-3 float-right\"\n                    icon=\"plus-circle\"\n                    style={{\n                      backgroundColor: '#00d77d',\n                      borderColor: '#00d77d',\n                      color: 'white'\n                    }}\n                  >\n                    Add\n                  </Button>\n\n                  <MDBDataTable\n                    responsive\n                    hover\n                    bordered\n                    data={{\n                      columns: [\n                        {\n                          label: 'ID',\n                          field: 'id',\n                          sort: 'asc',\n                          width: 50\n                        },\n                        {\n                          label: 'Name',\n                          field: 'name',\n                          sort: 'asc',\n                          width: 150\n                        },\n                        {\n                          label: 'Actions',\n                          field: 'actions',\n                          sort: 'asc',\n                          width: 100\n                        }\n                      ],\n                      rows: this.state.skills\n                    }}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Modal\n            isOpen={this.state.addModal}\n            toggleDelete={this.toggleAdd}\n            className={'modal-success '}\n          >\n            <ModalHeader>Add</ModalHeader>\n            <ModalBody>\n              <Form onSubmit={this.onCreate}>\n                <Input\n                  type=\"text\"\n                  id=\"text-input\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  required\n                  className=\"mb-2\"\n                  onChange={this.onChangeHandler}\n                />\n                {this.state.alert}\n                <Button\n                  className=\"float-right\"\n                  color=\"success\"\n                  type=\"submit\"\n                  onSubmit={this.onCreate}\n                >\n                  Add\n                </Button>\n              </Form>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggleAdd}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n          <Modal\n            isOpen={this.state.editModal}\n            toggleDelete={this.toggleEdit}\n            className={'modal-info '}\n          >\n            <ModalHeader>Edit</ModalHeader>\n            <ModalBody>\n              <Form onSubmit={this.onEdit}>\n                <Input\n                  type=\"text\"\n                  id=\"edit-name\"\n                  name=\"key\"\n                  placeholder=\"key\"\n                  required\n                  disabled\n                  value={\n                    this.state.currentItem ? this.state.currentItem._id : ''\n                  }\n                  className=\"mb-2\"\n                  onChange={this.onChangeHandler}\n                />\n                <Input\n                  type=\"text\"\n                  id=\"edit-link\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  required\n                  className=\"mb-2\"\n                  onChange={this.onChangeHandler}\n                />\n                <Button\n                  className=\"float-right\"\n                  color=\"info\"\n                  type=\"submit\"\n                  onSubmit={this.onEdit}\n                >\n                  Update\n                </Button>\n              </Form>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggleEdit}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n          <Modal\n            isOpen={this.state.deleteModal}\n            toggleDelete={this.toggleDelete}\n            className={'modal-danger '}\n          >\n            <ModalHeader>Delete</ModalHeader>\n            <ModalBody>\n              This skill will be marked as 'deleted'. Do you want to continue?\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"danger\" onClick={this.onDelete}>\n                Confirm\n              </Button>{' '}\n              <Button color=\"secondary\" onClick={this.toggleDelete}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\n\nexport default Skills;\n"],"sourceRoot":""}