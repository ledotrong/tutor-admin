{"ast":null,"code":"import _objectSpread from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Pages/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row, Alert } from 'reactstrap';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmitHandler = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      this.login(this.state.email, this.state.password);\n    };\n\n    this.login = async (email, password) => {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      };\n\n      try {\n        const response = await fetch(`https://admin-api-tutor.herokuapp.com/user/admin-login`, requestOptions);\n        const userData = await this.handleResponse(response);\n\n        if (userData.token) {\n          // localStorage.setItem(\"user\", JSON.stringify(userData));\n          localStorage.setItem('token', JSON.stringify(userData.token));\n          const role = userData.user.role;\n          localStorage.setItem('role', role);\n          this.props.history.push('/');\n        }\n\n        this.setState({\n          loading: false,\n          response: userData\n        });\n        return userData;\n      } catch (err) {\n        return err;\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      loading: false,\n      response: null\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const token = JSON.parse(localStorage.getItem('token'));\n\n    if (token) {\n      this.props.history.push('/');\n    }\n  }\n\n  onChangeHandler(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        if (response.status === 401) {} // auto logout if 401 response returned from api\n        // logoutUser();\n        // const error = (data && data.message) || response.statusText;\n        // return Promise.reject(error);\n\n\n        return data;\n      }\n\n      return data;\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app flex-row align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(CardGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"p-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(LoadingOverlay, {\n      active: this.state.loading,\n      spinner: true,\n      text: \"Loading...\",\n      styles: {\n        overlay: base => _objectSpread({}, base, {\n          background: 'rgba(255, 255, 255, 0.5)',\n          color: 'black'\n        }),\n        spinner: base => _objectSpread({}, base, {\n          width: '100px',\n          '& svg circle': {\n            stroke: 'rgba(255, 0, 0, 0.5)'\n          }\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"p\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Sign In to your account\"), React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Username\",\n      autoComplete: \"email\",\n      required: true,\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(InputGroup, {\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon-lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }))), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"passwordInput\",\n      required: true,\n      placeholder: \"Password\",\n      autoComplete: \"current-password\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(Alert, {\n      id: \"alert\",\n      isOpen: this.state.response,\n      className: \"mt-2 font-weight-light\",\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.state.response ? this.state.response.message : 'hidden'), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      className: \"px-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Login\")), React.createElement(Col, {\n      xs: \"6\",\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"link\",\n      className: \"px-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Forgot password?\"))))))), React.createElement(Card, {\n      className: \"text-white bg-primary py-5 d-md-down-none\",\n      style: {\n        width: '44%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Sign up\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"), React.createElement(Link, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      className: \"mt-3\",\n      active: true,\n      tabIndex: -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Register Now!\"))))))))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Pages/Login/Login.js"],"names":["React","Component","Link","LoadingOverlay","Button","Card","CardBody","CardGroup","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","Alert","Login","constructor","props","onSubmitHandler","e","preventDefault","setState","loading","login","state","email","password","requestOptions","method","headers","body","JSON","stringify","response","fetch","userData","handleResponse","token","localStorage","setItem","role","user","history","push","err","onChangeHandler","bind","componentDidMount","parse","getItem","target","name","value","text","then","data","ok","status","render","overlay","base","background","color","spinner","width","stroke","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,GALF,EAMEC,SANF,EAOEC,IAPF,EAQEC,KARF,EASEC,UATF,EAUEC,eAVF,EAWEC,cAXF,EAYEC,GAZF,EAaEC,KAbF,QAcO,YAdP;;AAgBA,MAAMC,KAAN,SAAoBhB,SAApB,CAA8B;AAC5BiB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyBnBC,eAzBmB,GAyBD,MAAMC,CAAN,IAAW;AAC3BA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,WAAKC,KAAL,CAAW,KAAKC,KAAL,CAAWC,KAAtB,EAA6B,KAAKD,KAAL,CAAWE,QAAxC;AACD,KA7BkB;;AAAA,SA+BnBH,KA/BmB,GA+BX,OAAOE,KAAP,EAAcC,QAAd,KAA2B;AACjC,YAAMC,cAAc,GAAG;AACrBC,QAAAA,MAAM,EAAE,MADa;AAErBC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFY;AAKrBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,UAAAA,KAAF;AAASC,UAAAA;AAAT,SAAf;AALe,OAAvB;;AAOA,UAAI;AACF,cAAMO,QAAQ,GAAG,MAAMC,KAAK,CACzB,wDADyB,EAE1BP,cAF0B,CAA5B;AAKA,cAAMQ,QAAQ,GAAG,MAAM,KAAKC,cAAL,CAAoBH,QAApB,CAAvB;;AAEA,YAAIE,QAAQ,CAACE,KAAb,EAAoB;AAClB;AACAC,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BR,IAAI,CAACC,SAAL,CAAeG,QAAQ,CAACE,KAAxB,CAA9B;AACA,gBAAMG,IAAI,GAAGL,QAAQ,CAACM,IAAT,CAAcD,IAA3B;AACAF,UAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAA7B;AACA,eAAKvB,KAAL,CAAWyB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;;AAED,aAAKtB,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE,KAAX;AAAkBW,UAAAA,QAAQ,EAAEE;AAA5B,SAAd;AAEA,eAAOA,QAAP;AACD,OAnBD,CAmBE,OAAOS,GAAP,EAAY;AACZ,eAAOA,GAAP;AACD;AACF,KA7DkB;;AAEjB,SAAKpB,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXJ,MAAAA,OAAO,EAAE,KAHE;AAIXW,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAOA,SAAKY,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAK5B,eAAL,GAAuB,KAAKA,eAAL,CAAqB4B,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMV,KAAK,GAAGN,IAAI,CAACiB,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,OAArB,CAAX,CAAd;;AAEA,QAAIZ,KAAJ,EAAW;AACT,WAAKpB,KAAL,CAAWyB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF;;AAEDE,EAAAA,eAAe,CAAC1B,CAAD,EAAI;AACjB,SAAKE,QAAL,CAAc;AAAE,OAACF,CAAC,CAAC+B,MAAF,CAASC,IAAV,GAAiBhC,CAAC,CAAC+B,MAAF,CAASE;AAA5B,KAAd;AACD;;AAwCDhB,EAAAA,cAAc,CAACH,QAAD,EAAW;AACvB,WAAOA,QAAQ,CAACoB,IAAT,GAAgBC,IAAhB,CAAqBD,IAAI,IAAI;AAClC,YAAME,IAAI,GAAGF,IAAI,IAAItB,IAAI,CAACiB,KAAL,CAAWK,IAAX,CAArB;;AACA,UAAI,CAACpB,QAAQ,CAACuB,EAAd,EAAkB;AAChB,YAAIvB,QAAQ,CAACwB,MAAT,KAAoB,GAAxB,EAA6B,CAG5B,CAHD,CACE;AACA;AAGF;AACA;;;AACA,eAAOF,IAAP;AACD;;AACD,aAAOA,IAAP;AACD,KAbM,CAAP;AAcD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AACE,MAAA,MAAM,EAAE,KAAKlC,KAAL,CAAWF,OADrB;AAEE,MAAA,OAAO,MAFT;AAGE,MAAA,IAAI,EAAC,YAHP;AAIE,MAAA,MAAM,EAAE;AACNqC,QAAAA,OAAO,EAAEC,IAAI,sBACRA,IADQ;AAEXC,UAAAA,UAAU,EAAE,0BAFD;AAGXC,UAAAA,KAAK,EAAE;AAHI,UADP;AAMNC,QAAAA,OAAO,EAAEH,IAAI,sBACRA,IADQ;AAEXI,UAAAA,KAAK,EAAE,OAFI;AAGX,0BAAgB;AACdC,YAAAA,MAAM,EAAE;AADM;AAHL;AANP,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAmBE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAK/C,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,EAGE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EAME,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,WAAW,EAAC,UAHd;AAIE,MAAA,YAAY,EAAC,OAJf;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,QAAQ,EAAE,KAAK2B,eANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAHF,EAkBE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EAME,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,EAAE,EAAC,eAHL;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,WAAW,EAAC,UALd;AAME,MAAA,YAAY,EAAC,kBANf;AAOE,MAAA,QAAQ,EAAE,KAAKA,eAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAlBF,EAkCE,oBAAC,KAAD;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWS,QAFrB;AAGE,MAAA,SAAS,EAAC,wBAHZ;AAIE,MAAA,KAAK,EAAC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKT,KAAL,CAAWS,QAAX,GACG,KAAKT,KAAL,CAAWS,QAAX,CAAoBiC,OADvB,GAEG,QARN,CAlCF,EA4CE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAUE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CAVF,CA5CF,CAnBF,CADF,CADF,CADF,EAsFE,oBAAC,IAAD;AACE,MAAA,SAAS,EAAC,2CADZ;AAEE,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE;AAAT,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sIAFF,EAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,MAAM,MAHR;AAIE,MAAA,QAAQ,EAAE,CAAC,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAPF,CADF,CAJF,CAtFF,CADF,CADF,CADF,CADF,CADF;AA0HD;;AA5M2B;;AA+M9B,eAAejD,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport LoadingOverlay from 'react-loading-overlay';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardGroup,\n  Col,\n  Container,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Row,\n  Alert\n} from 'reactstrap';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      loading: false,\n      response: null\n    };\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const token = JSON.parse(localStorage.getItem('token'));\n\n    if (token) {\n      this.props.history.push('/');\n    }\n  }\n\n  onChangeHandler(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmitHandler = async e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    this.login(this.state.email, this.state.password);\n  };\n\n  login = async (email, password) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ email, password })\n    };\n    try {\n      const response = await fetch(\n        `https://admin-api-tutor.herokuapp.com/user/admin-login`,\n        requestOptions\n      );\n\n      const userData = await this.handleResponse(response);\n\n      if (userData.token) {\n        // localStorage.setItem(\"user\", JSON.stringify(userData));\n        localStorage.setItem('token', JSON.stringify(userData.token));\n        const role = userData.user.role;\n        localStorage.setItem('role', role);\n        this.props.history.push('/');\n      }\n\n      this.setState({ loading: false, response: userData });\n\n      return userData;\n    } catch (err) {\n      return err;\n    }\n  };\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n        if (response.status === 401) {\n          // auto logout if 401 response returned from api\n          // logoutUser();\n        }\n\n        // const error = (data && data.message) || response.statusText;\n        // return Promise.reject(error);\n        return data;\n      }\n      return data;\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"8\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <LoadingOverlay\n                      active={this.state.loading}\n                      spinner\n                      text=\"Loading...\"\n                      styles={{\n                        overlay: base => ({\n                          ...base,\n                          background: 'rgba(255, 255, 255, 0.5)',\n                          color: 'black'\n                        }),\n                        spinner: base => ({\n                          ...base,\n                          width: '100px',\n                          '& svg circle': {\n                            stroke: 'rgba(255, 0, 0, 0.5)'\n                          }\n                        })\n                      }}\n                    >\n                      <Form onSubmit={this.onSubmitHandler}>\n                        <h1>Login</h1>\n                        <p className=\"text-muted\">Sign In to your account</p>\n                        <InputGroup className=\"mb-3\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"icon-user\"></i>\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"Username\"\n                            autoComplete=\"email\"\n                            required\n                            onChange={this.onChangeHandler}\n                          />\n                        </InputGroup>\n                        <InputGroup className=\"mb-4\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"icon-lock\"></i>\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"passwordInput\"\n                            required\n                            placeholder=\"Password\"\n                            autoComplete=\"current-password\"\n                            onChange={this.onChangeHandler}\n                          />\n                        </InputGroup>\n                        <Alert\n                          id=\"alert\"\n                          isOpen={this.state.response}\n                          className=\"mt-2 font-weight-light\"\n                          color=\"danger\"\n                        >\n                          {this.state.response\n                            ? this.state.response.message\n                            : 'hidden'}\n                        </Alert>\n                        <Row>\n                          <Col xs=\"6\">\n                            <Button\n                              type=\"submit\"\n                              color=\"primary\"\n                              className=\"px-4\"\n                            >\n                              Login\n                            </Button>\n                          </Col>\n                          <Col xs=\"6\" className=\"text-right\">\n                            <Button color=\"link\" className=\"px-0\">\n                              Forgot password?\n                            </Button>\n                          </Col>\n                        </Row>\n                      </Form>\n                    </LoadingOverlay>\n                  </CardBody>\n                </Card>\n                <Card\n                  className=\"text-white bg-primary py-5 d-md-down-none\"\n                  style={{ width: '44%' }}\n                >\n                  <CardBody className=\"text-center\">\n                    <div>\n                      <h2>Sign up</h2>\n                      <p>\n                        Lorem ipsum dolor sit amet, consectetur adipisicing\n                        elit, sed do eiusmod tempor incididunt ut labore et\n                        dolore magna aliqua.\n                      </p>\n                      <Link>\n                        <Button\n                          color=\"primary\"\n                          className=\"mt-3\"\n                          active\n                          tabIndex={-1}\n                        >\n                          Register Now!\n                        </Button>\n                      </Link>\n                    </div>\n                  </CardBody>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}