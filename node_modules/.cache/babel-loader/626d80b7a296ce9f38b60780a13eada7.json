{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport _objectSpread from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Users/Users.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport { Badge, Card, CardBody, CardHeader, Col } from 'reactstrap';\nimport LoadingOverlay from 'react-loading-overlay';\nconst Text = _Typography.Text;\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getBadge = status => {\n      return status === 'active' ? 'success' : status === 'inactive' ? 'secondary' : status === 'pending' ? 'warning' : status === 'banned' ? 'danger' : 'primary';\n    };\n\n    this.getUsers = async () => {\n      this.setState({\n        loading: true\n      });\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySUQiOiI1ZGU1ZTE1YjJkMDY1NjFkNDc2MjA0MmUiLCJyb2xlIjoibWFzdGVyIiwiaWF0IjoxNTc1ODgyNjc1fQ.gRjIyKO6wb0N5QVa5kHuXsWTF7c_GUmNsVkagvNsk2U`\n        }\n      };\n\n      try {\n        const response = await fetch('https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/users', requestOptions);\n        let userData = await this.handleResponse(response);\n\n        if (this.state.statusFilter !== 'all') {\n          userData = userData.filter(data => data.status === this.state.statusFilter);\n        }\n\n        if (this.state.roleFilter !== 'all') {\n          userData = userData.filter(data => data.role === this.state.roleFilter);\n        }\n\n        userData.forEach((element, index) => {\n          const userLink = `/users/${element._id}`; // element.name = <Link to={userLink}>{element.name}</Link>;\n          // element.email = <Link to={userLink}>{element.email}</Link>;\n\n          let date = new Date(element.date);\n          element._id = index + 1;\n          element.status = React.createElement(Link, {\n            to: userLink,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, React.createElement(Badge, {\n            color: this.getBadge(element.status),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, element.status));\n          element.date = date.toLocaleString();\n          element.actions = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, React.createElement(Link, {\n            className: \"btn btn-info\",\n            to: userLink,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, \"View\"));\n        });\n        this.setState({\n          loading: false,\n          userData: userData\n        });\n        return userData;\n      } catch (err) {\n        return err;\n      }\n    };\n\n    this.state = {\n      loading: true,\n      userData: [],\n      statusFilter: 'all',\n      roleFilter: 'all',\n      columns: [{\n        label: 'ID',\n        field: '_id',\n        sort: 'asc',\n        width: 50\n      }, {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc',\n        width: 150\n      }, {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 150\n      }, {\n        label: 'Registered',\n        field: 'date',\n        sort: 'asc',\n        width: 100\n      }, {\n        label: 'Role',\n        field: 'role',\n        sort: 'asc',\n        width: 100\n      }, {\n        label: 'Status',\n        field: 'status',\n        sort: 'asc',\n        width: 100\n      }, {\n        label: 'Actions',\n        field: 'actions',\n        sort: 'asc',\n        width: 150\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        if (response.status === 401) {} // auto logout if 401 response returned from api\n        // logoutUser();\n        // const error = (data && data.message) || response.statusText;\n        // return Promise.reject(error);\n\n\n        return data;\n      }\n\n      return data;\n    });\n  }\n\n  onChangeFilter(e) {\n    this.setState({\n      statusFilter: e.target.value,\n      roleFilter: e.target.value\n    });\n    this.getUsers();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(LoadingOverlay, {\n      active: this.state.loading,\n      spinner: true,\n      text: \"Loading...\",\n      styles: {\n        overlay: base => _objectSpread({}, base, {\n          background: 'rgba(255, 255, 255, 0.5)',\n          color: 'black'\n        }),\n        spinner: base => _objectSpread({}, base, {\n          width: '100px',\n          '& svg circle': {\n            stroke: 'rgba(255, 0, 0, 0.5)'\n          }\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xl: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-align-justify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), \"Users\", '  ', React.createElement(\"small\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"user database\")), React.createElement(_Row, {\n      className: \"mt-4 mr-4\",\n      type: \"flex\",\n      justify: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(_Radio.Group, {\n      defaultValue: \"a\",\n      size: \"small\",\n      buttonStyle: \"solid\",\n      onChange: e => this.onChangeFilter(e),\n      value: this.state.roleFilter,\n      className: \"mr-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(_Radio.Button, {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"All\"), React.createElement(_Radio.Button, {\n      value: \"student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Student\"), React.createElement(_Radio.Button, {\n      value: \"tutor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Tutor\")), React.createElement(_Radio.Group, {\n      defaultValue: \"a\",\n      size: \"small\",\n      buttonStyle: \"solid\",\n      onChange: e => this.onChangeFilter(e),\n      value: this.state.statusFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(_Radio.Button, {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"All\"), React.createElement(_Radio.Button, {\n      value: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Active\"), React.createElement(_Radio.Button, {\n      value: \"inactive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Inactive\"), React.createElement(_Radio.Button, {\n      value: \"banned\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Banned\"))), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(MDBDataTable, {\n      responsive: true,\n      hover: true,\n      bordered: true,\n      data: {\n        columns: this.state.columns,\n        rows: this.state.userData\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Users;\n/* <Row>\n            <Col xl={12}>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Users{\" \"}\n                  <small className=\"text-muted\">user database</small>\n                </CardHeader>\n                <CardBody>\n                  <Table responsive hover bordered>\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Registered</th>\n                        <th scope=\"col\">Role</th>\n                        <th scope=\"col\">Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.userData.map((user, index) => (\n                        <UserRow key={index} index={index} user={user} />\n                      ))}\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row> */","map":{"version":3,"sources":["/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Users/Users.js"],"names":["React","Component","Link","MDBDataTable","Badge","Card","CardBody","CardHeader","Col","LoadingOverlay","Text","Users","constructor","props","getBadge","status","getUsers","setState","loading","requestOptions","method","headers","Authorization","response","fetch","userData","handleResponse","state","statusFilter","filter","data","roleFilter","role","forEach","element","index","userLink","_id","date","Date","toLocaleString","actions","err","columns","label","field","sort","width","componentDidMount","text","then","JSON","parse","ok","onChangeFilter","e","target","value","render","overlay","base","background","color","spinner","stroke","rows"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport { Badge, Card, CardBody, CardHeader, Col } from 'reactstrap';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Radio, Row, Typography } from 'antd';\n\nconst { Text } = Typography;\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      userData: [],\n      statusFilter: 'all',\n      roleFilter: 'all',\n      columns: [\n        {\n          label: 'ID',\n          field: '_id',\n          sort: 'asc',\n          width: 50\n        },\n        {\n          label: 'Name',\n          field: 'name',\n          sort: 'asc',\n          width: 150\n        },\n        {\n          label: 'Email',\n          field: 'email',\n          sort: 'asc',\n          width: 150\n        },\n        {\n          label: 'Registered',\n          field: 'date',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Role',\n          field: 'role',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Status',\n          field: 'status',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n          sort: 'asc',\n          width: 150\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  getBadge = status => {\n    return status === 'active'\n      ? 'success'\n      : status === 'inactive'\n      ? 'secondary'\n      : status === 'pending'\n      ? 'warning'\n      : status === 'banned'\n      ? 'danger'\n      : 'primary';\n  };\n\n  getUsers = async () => {\n    this.setState({ loading: true });\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySUQiOiI1ZGU1ZTE1YjJkMDY1NjFkNDc2MjA0MmUiLCJyb2xlIjoibWFzdGVyIiwiaWF0IjoxNTc1ODgyNjc1fQ.gRjIyKO6wb0N5QVa5kHuXsWTF7c_GUmNsVkagvNsk2U`\n      }\n    };\n    try {\n      const response = await fetch(\n        'https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/users',\n        requestOptions\n      );\n\n      let userData = await this.handleResponse(response);\n\n      if (this.state.statusFilter !== 'all') {\n        userData = userData.filter(\n          data => data.status === this.state.statusFilter\n        );\n      }\n      if (this.state.roleFilter !== 'all') {\n        userData = userData.filter(data => data.role === this.state.roleFilter);\n      }\n\n      userData.forEach((element, index) => {\n        const userLink = `/users/${element._id}`;\n        // element.name = <Link to={userLink}>{element.name}</Link>;\n        // element.email = <Link to={userLink}>{element.email}</Link>;\n        let date = new Date(element.date);\n\n        element._id = index + 1;\n        element.status = (\n          <Link to={userLink}>\n            <Badge color={this.getBadge(element.status)}>\n              {element.status}\n            </Badge>\n          </Link>\n        );\n        element.date = date.toLocaleString();\n        element.actions = (\n          <div>\n            <Link className=\"btn btn-info\" to={userLink}>\n              View\n            </Link>\n          </div>\n        );\n      });\n\n      this.setState({ loading: false, userData: userData });\n      return userData;\n    } catch (err) {\n      return err;\n    }\n  };\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n        if (response.status === 401) {\n          // auto logout if 401 response returned from api\n          // logoutUser();\n        }\n\n        // const error = (data && data.message) || response.statusText;\n        // return Promise.reject(error);\n        return data;\n      }\n      return data;\n    });\n  }\n\n  onChangeFilter(e) {\n    this.setState({ statusFilter: e.target.value, roleFilter: e.target.value });\n    this.getUsers();\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <LoadingOverlay\n          active={this.state.loading}\n          spinner\n          text=\"Loading...\"\n          styles={{\n            overlay: base => ({\n              ...base,\n              background: 'rgba(255, 255, 255, 0.5)',\n              color: 'black'\n            }),\n            spinner: base => ({\n              ...base,\n              width: '100px',\n              '& svg circle': {\n                stroke: 'rgba(255, 0, 0, 0.5)'\n              }\n            })\n          }}\n        >\n          <Row>\n            <Col xl={12}>\n              <Card>\n                <CardHeader className=\"bg-dark\">\n                  <i className=\"fa fa-align-justify\"></i>Users{'  '}\n                  <small className=\"text-muted\">user database</small>\n                </CardHeader>\n                <Row className=\"mt-4 mr-4\" type=\"flex\" justify=\"end\">\n                  <Radio.Group\n                    defaultValue=\"a\"\n                    size=\"small\"\n                    buttonStyle=\"solid\"\n                    onChange={e => this.onChangeFilter(e)}\n                    value={this.state.roleFilter}\n                    className=\"mr-4\"\n                  >\n                    <Radio.Button value=\"all\">All</Radio.Button>\n                    <Radio.Button value=\"student\">Student</Radio.Button>\n                    <Radio.Button value=\"tutor\">Tutor</Radio.Button>\n                  </Radio.Group>\n                  <Radio.Group\n                    defaultValue=\"a\"\n                    size=\"small\"\n                    buttonStyle=\"solid\"\n                    onChange={e => this.onChangeFilter(e)}\n                    value={this.state.statusFilter}\n                  >\n                    <Radio.Button value=\"all\">All</Radio.Button>\n                    <Radio.Button value=\"active\">Active</Radio.Button>\n                    <Radio.Button value=\"inactive\">Inactive</Radio.Button>\n                    <Radio.Button value=\"banned\">Banned</Radio.Button>\n                  </Radio.Group>\n                </Row>\n                <CardBody>\n                  <MDBDataTable\n                    responsive\n                    hover\n                    bordered\n                    data={{\n                      columns: this.state.columns,\n                      rows: this.state.userData\n                    }}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\n\nexport default Users;\n\n/* <Row>\n            <Col xl={12}>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Users{\" \"}\n                  <small className=\"text-muted\">user database</small>\n                </CardHeader>\n                <CardBody>\n                  <Table responsive hover bordered>\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Registered</th>\n                        <th scope=\"col\">Role</th>\n                        <th scope=\"col\">Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.userData.map((user, index) => (\n                        <UserRow key={index} index={index} user={user} />\n                      ))}\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row> */\n"]},"metadata":{},"sourceType":"module"}