{"ast":null,"code":"import _objectSpread from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Pages/Login/Login.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row, Alert } from \"reactstrap\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.onSubmitHandler =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                _this.setState({\n                  loading: true\n                });\n\n                console.log(_this.state);\n\n                _this.login(_this.state.email, _this.state.password);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.login =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(email, password) {\n        var requestOptions, response, userData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                requestOptions = {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    email: email,\n                    password: password\n                  })\n                };\n                _context2.prev = 1;\n                _context2.next = 4;\n                return fetch(\"https://cors-anywhere.herokuapp.com/http://admin-api-tutor.herokuapp.com/user/admin-login\", requestOptions);\n\n              case 4:\n                response = _context2.sent;\n                _context2.next = 7;\n                return _this.handleResponse(response);\n\n              case 7:\n                userData = _context2.sent;\n\n                if (userData.token) {\n                  console.log(userData); // localStorage.setItem(\"user\", JSON.stringify(userData));\n\n                  localStorage.setItem(\"token\", JSON.stringify(userData.token));\n\n                  _this.props.history.push(\"/\");\n                }\n\n                console.log(userData);\n\n                _this.setState({\n                  loading: false,\n                  response: userData\n                });\n\n                return _context2.abrupt(\"return\", userData);\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](1);\n                return _context2.abrupt(\"return\", _context2.t0);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 14]]);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n      response: null\n    };\n    _this.onChangeHandler = _this.onChangeHandler.bind(_assertThisInitialized(_this));\n    _this.onSubmitHandler = _this.onSubmitHandler.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var token = JSON.parse(localStorage.getItem(\"token\"));\n\n      if (token) {\n        this.props.history.push(\"/\");\n      }\n    }\n  }, {\n    key: \"onChangeHandler\",\n    value: function onChangeHandler(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleResponse\",\n    value: function handleResponse(response) {\n      return response.text().then(function (text) {\n        var data = text && JSON.parse(text);\n\n        if (!response.ok) {\n          if (response.status === 401) {} // auto logout if 401 response returned from api\n          // logoutUser();\n          // const error = (data && data.message) || response.statusText;\n          // return Promise.reject(error);\n\n\n          return data;\n        }\n\n        return data;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app flex-row align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(CardGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"p-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(LoadingOverlay, {\n        active: this.state.loading,\n        spinner: true,\n        text: \"Loading...\",\n        styles: {\n          overlay: function overlay(base) {\n            return _objectSpread({}, base, {\n              background: \"rgba(255, 255, 255, 0.5)\",\n              color: \"black\"\n            });\n          },\n          spinner: function spinner(base) {\n            return _objectSpread({}, base, {\n              width: \"100px\",\n              \"& svg circle\": {\n                stroke: \"rgba(255, 0, 0, 0.5)\"\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.onSubmitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"p\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Sign In to your account\"), React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Username\",\n        autoComplete: \"email\",\n        required: true,\n        onChange: this.onChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"passwordInput\",\n        required: true,\n        placeholder: \"Password\",\n        autoComplete: \"current-password\",\n        onChange: this.onChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })), React.createElement(Alert, {\n        id: \"alert\",\n        isOpen: this.state.response,\n        className: \"mt-2 font-weight-light\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.state.response ? this.state.response.message : \"hidden\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        className: \"px-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Login\")), React.createElement(Col, {\n        xs: \"6\",\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"link\",\n        className: \"px-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Forgot password?\"))))))), React.createElement(Card, {\n        className: \"text-white bg-primary py-5 d-md-down-none\",\n        style: {\n          width: \"44%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Sign up\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"), React.createElement(Link, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        className: \"mt-3\",\n        active: true,\n        tabIndex: -1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Register Now!\"))))))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Pages/Login/Login.js"],"names":["React","Component","Link","LoadingOverlay","Button","Card","CardBody","CardGroup","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","Alert","Login","props","onSubmitHandler","e","preventDefault","setState","loading","console","log","state","login","email","password","requestOptions","method","headers","body","JSON","stringify","fetch","response","handleResponse","userData","token","localStorage","setItem","history","push","onChangeHandler","bind","parse","getItem","target","name","value","text","then","data","ok","status","overlay","base","background","color","spinner","width","stroke","message"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,GALF,EAMEC,SANF,EAOEC,IAPF,EAQEC,KARF,EASEC,UATF,EAUEC,eAVF,EAWEC,cAXF,EAYEC,GAZF,EAaEC,KAbF,QAcO,YAdP;;IAgBMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UAyBnBC,eAzBmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAyBD,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAChBA,gBAAAA,CAAC,CAACC,cAAF;;AACA,sBAAKC,QAAL,CAAc;AAAEC,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AAEAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAjB;;AAEA,sBAAKC,KAAL,CAAW,MAAKD,KAAL,CAAWE,KAAtB,EAA6B,MAAKF,KAAL,CAAWG,QAAxC;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAzBC;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAkCnBF,KAlCmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAkCX,kBAAOC,KAAP,EAAcC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,gBAAAA,cADA,GACiB;AACrBC,kBAAAA,MAAM,EAAE,MADa;AAErBC,kBAAAA,OAAO,EAAE;AACP,oCAAgB;AADT,mBAFY;AAKrBC,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,oBAAAA,KAAK,EAALA,KAAF;AAASC,oBAAAA,QAAQ,EAARA;AAAT,mBAAf;AALe,iBADjB;AAAA;AAAA;AAAA,uBASmBO,KAAK,8FAE1BN,cAF0B,CATxB;;AAAA;AASEO,gBAAAA,QATF;AAAA;AAAA,uBAcmB,MAAKC,cAAL,CAAoBD,QAApB,CAdnB;;AAAA;AAcEE,gBAAAA,QAdF;;AAgBJ,oBAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBhB,kBAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ,EADkB,CAElB;;AACAE,kBAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BR,IAAI,CAACC,SAAL,CAAeI,QAAQ,CAACC,KAAxB,CAA9B;;AACA,wBAAKtB,KAAL,CAAWyB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;;AAEDpB,gBAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;;AAEA,sBAAKjB,QAAL,CAAc;AAAEC,kBAAAA,OAAO,EAAE,KAAX;AAAkBc,kBAAAA,QAAQ,EAAEE;AAA5B,iBAAd;;AAzBI,kDA2BGA,QA3BH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAlCW;;AAAA;AAAA;AAAA;AAAA;;AAEjB,UAAKb,KAAL,GAAa;AACXE,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXN,MAAAA,OAAO,EAAE,KAHE;AAIXc,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAOA,UAAKQ,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,+BAAvB;AACA,UAAK3B,eAAL,GAAuB,MAAKA,eAAL,CAAqB2B,IAArB,+BAAvB;AAViB;AAWlB;;;;wCAEmB;AAClB,UAAMN,KAAK,GAAGN,IAAI,CAACa,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAX,CAAd;;AAEA,UAAIR,KAAJ,EAAW;AACT,aAAKtB,KAAL,CAAWyB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF;;;oCAEexB,C,EAAG;AACjB,WAAKE,QAAL,qBAAiBF,CAAC,CAAC6B,MAAF,CAASC,IAA1B,EAAiC9B,CAAC,CAAC6B,MAAF,CAASE,KAA1C;AACD;;;mCA4Ccd,Q,EAAU;AACvB,aAAOA,QAAQ,CAACe,IAAT,GAAgBC,IAAhB,CAAqB,UAAAD,IAAI,EAAI;AAClC,YAAME,IAAI,GAAGF,IAAI,IAAIlB,IAAI,CAACa,KAAL,CAAWK,IAAX,CAArB;;AACA,YAAI,CAACf,QAAQ,CAACkB,EAAd,EAAkB;AAChB,cAAIlB,QAAQ,CAACmB,MAAT,KAAoB,GAAxB,EAA6B,CAG5B,CAHD,CACE;AACA;AAGF;AACA;;;AACA,iBAAOF,IAAP;AACD;;AACD,eAAOA,IAAP;AACD,OAbM,CAAP;AAcD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AACE,QAAA,MAAM,EAAE,KAAK5B,KAAL,CAAWH,OADrB;AAEE,QAAA,OAAO,MAFT;AAGE,QAAA,IAAI,EAAC,YAHP;AAIE,QAAA,MAAM,EAAE;AACNkC,UAAAA,OAAO,EAAE,iBAAAC,IAAI;AAAA,qCACRA,IADQ;AAEXC,cAAAA,UAAU,EAAE,0BAFD;AAGXC,cAAAA,KAAK,EAAE;AAHI;AAAA,WADP;AAMNC,UAAAA,OAAO,EAAE,iBAAAH,IAAI;AAAA,qCACRA,IADQ;AAEXI,cAAAA,KAAK,EAAE,OAFI;AAGX,8BAAgB;AACdC,gBAAAA,MAAM,EAAE;AADM;AAHL;AAAA;AANP,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAmBE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAK5C,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFF,EAGE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAME,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,YAAY,EAAC,OAJf;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,QAAQ,EAAE,KAAK0B,eANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAHF,EAkBE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAME,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,EAAE,EAAC,eAHL;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,WAAW,EAAC,UALd;AAME,QAAA,YAAY,EAAC,kBANf;AAOE,QAAA,QAAQ,EAAE,KAAKA,eAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAlBF,EAkCE,oBAAC,KAAD;AACE,QAAA,EAAE,EAAC,OADL;AAEE,QAAA,MAAM,EAAE,KAAKnB,KAAL,CAAWW,QAFrB;AAGE,QAAA,SAAS,EAAC,wBAHZ;AAIE,QAAA,KAAK,EAAC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG,KAAKX,KAAL,CAAWW,QAAX,GACG,KAAKX,KAAL,CAAWW,QAAX,CAAoB2B,OADvB,GAEG,QARN,CAlCF,EA4CE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAUE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAVF,CA5CF,CAnBF,CADF,CADF,CADF,EAsFE,oBAAC,IAAD;AACE,QAAA,SAAS,EAAC,2CADZ;AAEE,QAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wIAFF,EAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,MAAM,MAHR;AAIE,QAAA,QAAQ,EAAE,CAAC,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAPF,CADF,CAJF,CAtFF,CADF,CADF,CADF,CADF,CADF;AA0HD;;;;EAhNiB7D,S;;AAmNpB,eAAegB,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardGroup,\n  Col,\n  Container,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Row,\n  Alert\n} from \"reactstrap\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n      response: null\n    };\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const token = JSON.parse(localStorage.getItem(\"token\"));\n\n    if (token) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  onChangeHandler(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmitHandler = async e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n\n    console.log(this.state);\n\n    this.login(this.state.email, this.state.password);\n  };\n\n  login = async (email, password) => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ email, password })\n    };\n    try {\n      const response = await fetch(\n        `https://cors-anywhere.herokuapp.com/http://admin-api-tutor.herokuapp.com/user/admin-login`,\n        requestOptions\n      );\n\n      const userData = await this.handleResponse(response);\n\n      if (userData.token) {\n        console.log(userData);\n        // localStorage.setItem(\"user\", JSON.stringify(userData));\n        localStorage.setItem(\"token\", JSON.stringify(userData.token));\n        this.props.history.push(\"/\");\n      }\n\n      console.log(userData);\n\n      this.setState({ loading: false, response: userData });\n\n      return userData;\n    } catch (err) {\n      return err;\n    }\n  };\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n        if (response.status === 401) {\n          // auto logout if 401 response returned from api\n          // logoutUser();\n        }\n\n        // const error = (data && data.message) || response.statusText;\n        // return Promise.reject(error);\n        return data;\n      }\n      return data;\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"8\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <LoadingOverlay\n                      active={this.state.loading}\n                      spinner\n                      text=\"Loading...\"\n                      styles={{\n                        overlay: base => ({\n                          ...base,\n                          background: \"rgba(255, 255, 255, 0.5)\",\n                          color: \"black\"\n                        }),\n                        spinner: base => ({\n                          ...base,\n                          width: \"100px\",\n                          \"& svg circle\": {\n                            stroke: \"rgba(255, 0, 0, 0.5)\"\n                          }\n                        })\n                      }}\n                    >\n                      <Form onSubmit={this.onSubmitHandler}>\n                        <h1>Login</h1>\n                        <p className=\"text-muted\">Sign In to your account</p>\n                        <InputGroup className=\"mb-3\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"icon-user\"></i>\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"Username\"\n                            autoComplete=\"email\"\n                            required\n                            onChange={this.onChangeHandler}\n                          />\n                        </InputGroup>\n                        <InputGroup className=\"mb-4\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"icon-lock\"></i>\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"passwordInput\"\n                            required\n                            placeholder=\"Password\"\n                            autoComplete=\"current-password\"\n                            onChange={this.onChangeHandler}\n                          />\n                        </InputGroup>\n                        <Alert\n                          id=\"alert\"\n                          isOpen={this.state.response}\n                          className=\"mt-2 font-weight-light\"\n                          color=\"danger\"\n                        >\n                          {this.state.response\n                            ? this.state.response.message\n                            : \"hidden\"}\n                        </Alert>\n                        <Row>\n                          <Col xs=\"6\">\n                            <Button\n                              type=\"submit\"\n                              color=\"primary\"\n                              className=\"px-4\"\n                            >\n                              Login\n                            </Button>\n                          </Col>\n                          <Col xs=\"6\" className=\"text-right\">\n                            <Button color=\"link\" className=\"px-0\">\n                              Forgot password?\n                            </Button>\n                          </Col>\n                        </Row>\n                      </Form>\n                    </LoadingOverlay>\n                  </CardBody>\n                </Card>\n                <Card\n                  className=\"text-white bg-primary py-5 d-md-down-none\"\n                  style={{ width: \"44%\" }}\n                >\n                  <CardBody className=\"text-center\">\n                    <div>\n                      <h2>Sign up</h2>\n                      <p>\n                        Lorem ipsum dolor sit amet, consectetur adipisicing\n                        elit, sed do eiusmod tempor incididunt ut labore et\n                        dolore magna aliqua.\n                      </p>\n                      <Link>\n                        <Button\n                          color=\"primary\"\n                          className=\"mt-3\"\n                          active\n                          tabIndex={-1}\n                        >\n                          Register Now!\n                        </Button>\n                      </Link>\n                    </div>\n                  </CardBody>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}