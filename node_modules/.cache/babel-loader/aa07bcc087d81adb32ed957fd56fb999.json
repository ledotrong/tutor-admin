{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/descriptions/style\";\nimport _Descriptions from \"antd/es/descriptions\";\nimport _objectSpread from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/badge/style\";\nimport _Badge from \"antd/es/badge\";\nvar _jsxFileName = \"/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Users/User.js\";\nimport React, { Component, useReducer } from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const token = JSON.parse(localStorage.getItem('token'));\n      if (token) this.setState({\n        token\n      });\n      const userData = await this.getUsers(token);\n      let user = null;\n      let banAction = false;\n\n      if (userData) {\n        user = userData.find(user => user._id.toString() === this.props.match.params.id);\n\n        if (user) {\n          if (user.status === 'banned') banAction = true;\n          user.picture = React.createElement(\"img\", {\n            src: user.picture,\n            style: {\n              height: 250,\n              width: 250,\n              objectFit: 'cover',\n              borderRadius: 125\n            },\n            alt: \"profile\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          });\n          user.status = React.createElement(_Badge, {\n            status: this.getBadge(user.status),\n            text: user.status,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          });\n          user.date = new Date(user.date).toLocaleString(); //user.address = Object.values(user.address).join(', ');\n          //user.skills = Object.values(user.skills).join(', ');\n\n          user.wages = user.wages + ' VND/night';\n        }\n\n        this.setState({\n          user: user,\n          banAction\n        });\n      }\n    };\n\n    this.getBadge = status => {\n      return status === 'active' ? 'success' : status === 'inactive' ? 'default' : status === 'banned' ? 'error' : 'primary';\n    };\n\n    this.getUsers = async token => {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      };\n\n      try {\n        const response = await fetch('https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/users', requestOptions);\n        let userData = await this.handleResponse(response);\n        this.setState({\n          loading: false,\n          userData: userData\n        });\n        return userData;\n      } catch (err) {\n        return err;\n      }\n    };\n\n    this.banUserAction = async () => {\n      this.setState({\n        loading: true\n      });\n      const requestOptions = {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.state.token}`\n        }\n      };\n\n      try {\n        const response = await fetch(`https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/ban-user/${this.state.user._id}`, requestOptions);\n        const data = await this.handleResponse(response);\n        let user = this.state.user;\n        const date = new Date(user.date);\n        user.date = date.toLocaleString();\n        user.status = React.createElement(_Badge, {\n          status: this.getBadge(data),\n          text: data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        });\n        this.setState({\n          loading: false,\n          user,\n          banAction: !this.state.banAction\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      loading: true,\n      banAction: false,\n      userData: [],\n      user: null,\n      token: null\n    };\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        if (response.status === 401) {} // auto logout if 401 response returned from api\n        // logoutUser();\n        // const error = (data && data.message) || response.statusText;\n        // return Promise.reject(error);\n\n\n        return data;\n      }\n\n      return data;\n    });\n  }\n\n  render() {\n    let user = this.state.user;\n\n    if (!user) {\n      user = {\n        id: 'Not found'\n      };\n    }\n\n    const details = [['Name', user.name], ['Email', user.email], ['Address', user.address], ['Role', user.role], ['Skills', user.skills], ['Date registered', user.date], ['Wages', user.wages], ['Status', user.status], ['Introduction', user.introduction]];\n    return React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(LoadingOverlay, {\n      active: this.state.loading,\n      spinner: true,\n      text: \"Loading...\",\n      styles: {\n        overlay: base => _objectSpread({}, base, {\n          background: 'rgba(255, 255, 255, 0.5)',\n          color: 'black'\n        }),\n        spinner: base => _objectSpread({}, base, {\n          width: '100px',\n          '& svg circle': {\n            stroke: 'rgba(255, 0, 0, 0.5)'\n          }\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon-info pr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), \"User id:\", ' ', this.props.match.params.id)), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 3,\n      className: \" mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-center font-weight-bold mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-uppercase name-font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, user.name)), React.createElement(Row, {\n      className: \"justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, user.picture)), React.createElement(Col, {\n      className: \"ml-4 mt-4\",\n      lg: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(_Descriptions, {\n      title: \"User Information\",\n      bordered: true,\n      column: {\n        xxl: 4,\n        xl: 3,\n        lg: 3,\n        md: 3,\n        sm: 2,\n        xs: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(_Descriptions.Item, {\n      label: \"Role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, user.role), React.createElement(_Descriptions.Item, {\n      label: \"Status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, user.status), React.createElement(_Descriptions.Item, {\n      label: \"Registered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, user.date), React.createElement(_Descriptions.Item, {\n      label: \"Rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, user.rate), React.createElement(_Descriptions.Item, {\n      label: \"Skills\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, Object.values(user.skills).join(', ')), React.createElement(_Descriptions.Item, {\n      label: \"Official\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"$60.00\"), React.createElement(_Descriptions.Item, {\n      label: \"Config Info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Data disk type: MongoDB\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), \"Database version: 3.4\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), \"Package: dds.mongo.mid\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), \"Storage space: 10 GB\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), \"Replication factor: 3\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), \"Region: East China 1\")), React.createElement(Row, {\n      className: \"justify-content-end mt-4 mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      onClick: () => this.banUserAction(),\n      type: this.state.banAction ? 'primary' : 'danger',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, this.state.banAction ? 'Unban' : 'Ban'))))))))));\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Users/User.js"],"names":["React","Component","useReducer","Card","CardBody","CardHeader","Col","Row","Table","LoadingOverlay","User","constructor","props","componentDidMount","token","JSON","parse","localStorage","getItem","setState","userData","getUsers","user","banAction","find","_id","toString","match","params","id","status","picture","height","width","objectFit","borderRadius","getBadge","date","Date","toLocaleString","wages","requestOptions","method","headers","Authorization","response","fetch","handleResponse","loading","err","banUserAction","state","data","console","log","text","then","ok","render","details","name","email","address","role","skills","introduction","overlay","base","background","color","spinner","stroke","xxl","xl","lg","md","sm","xs","rate","Object","values","join"],"mappings":"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","sourcesContent":["import React, { Component, useReducer } from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\nimport { Badge, Button, Descriptions } from 'antd';\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      banAction: false,\n      userData: [],\n      user: null,\n      token: null\n    };\n  }\n\n  componentDidMount = async () => {\n    const token = JSON.parse(localStorage.getItem('token'));\n    if (token) this.setState({ token });\n    const userData = await this.getUsers(token);\n    let user = null;\n    let banAction = false;\n\n    if (userData) {\n      user = userData.find(\n        user => user._id.toString() === this.props.match.params.id\n      );\n\n      if (user) {\n        if (user.status === 'banned') banAction = true;\n        user.picture = (\n          <img\n            src={user.picture}\n            style={{\n              height: 250,\n              width: 250,\n              objectFit: 'cover',\n              borderRadius: 125\n            }}\n            alt=\"profile\"\n          />\n        );\n        user.status = (\n          <Badge status={this.getBadge(user.status)} text={user.status}></Badge>\n        );\n        user.date = new Date(user.date).toLocaleString();\n        //user.address = Object.values(user.address).join(', ');\n        //user.skills = Object.values(user.skills).join(', ');\n        user.wages = user.wages + ' VND/night';\n      }\n\n      this.setState({ user: user, banAction });\n    }\n  };\n\n  getBadge = status => {\n    return status === 'active'\n      ? 'success'\n      : status === 'inactive'\n      ? 'default'\n      : status === 'banned'\n      ? 'error'\n      : 'primary';\n  };\n\n  getUsers = async token => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n    try {\n      const response = await fetch(\n        'https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/users',\n        requestOptions\n      );\n\n      let userData = await this.handleResponse(response);\n\n      this.setState({ loading: false, userData: userData });\n\n      return userData;\n    } catch (err) {\n      return err;\n    }\n  };\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n        if (response.status === 401) {\n          // auto logout if 401 response returned from api\n          // logoutUser();\n        }\n\n        // const error = (data && data.message) || response.statusText;\n        // return Promise.reject(error);\n        return data;\n      }\n      return data;\n    });\n  }\n\n  banUserAction = async () => {\n    this.setState({ loading: true });\n    const requestOptions = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.state.token}`\n      }\n    };\n    try {\n      const response = await fetch(\n        `https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/ban-user/${this.state.user._id}`,\n        requestOptions\n      );\n\n      const data = await this.handleResponse(response);\n      let user = this.state.user;\n      const date = new Date(user.date);\n      user.date = date.toLocaleString();\n      user.status = <Badge status={this.getBadge(data)} text={data}></Badge>;\n\n      this.setState({ loading: false, user, banAction: !this.state.banAction });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  render() {\n    let user = this.state.user;\n    if (!user) {\n      user = { id: 'Not found' };\n    }\n\n    const details = [\n      ['Name', user.name],\n      ['Email', user.email],\n      ['Address', user.address],\n      ['Role', user.role],\n      ['Skills', user.skills],\n      ['Date registered', user.date],\n      ['Wages', user.wages],\n      ['Status', user.status],\n      ['Introduction', user.introduction]\n    ];\n\n    return (\n      <div className=\"animated fadeIn\">\n        <LoadingOverlay\n          active={this.state.loading}\n          spinner\n          text=\"Loading...\"\n          styles={{\n            overlay: base => ({\n              ...base,\n              background: 'rgba(255, 255, 255, 0.5)',\n              color: 'black'\n            }),\n            spinner: base => ({\n              ...base,\n              width: '100px',\n              '& svg circle': {\n                stroke: 'rgba(255, 0, 0, 0.5)'\n              }\n            })\n          }}\n        >\n          <Row className=\"justify-content-center\">\n            <Col lg={12}>\n              <Card>\n                <CardHeader className=\"bg-dark\">\n                  <strong>\n                    <i className=\"icon-info pr-1\"></i>User id:{' '}\n                    {this.props.match.params.id}\n                  </strong>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col lg={3} className=\" mt-4\">\n                      <Row className=\"justify-content-center font-weight-bold mb-3\">\n                        <h2 className=\"text-uppercase name-font\">\n                          {user.name}\n                        </h2>\n                      </Row>\n                      <Row className=\"justify-content-center\">\n                        {user.picture}\n                      </Row>\n                    </Col>\n                    <Col className=\"ml-4 mt-4\" lg={8}>\n                      <Descriptions\n                        title=\"User Information\"\n                        bordered\n                        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                      >\n                        <Descriptions.Item label=\"Role\">\n                          {user.role}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Status\">\n                          {user.status}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Registered\">\n                          {user.date}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Rating\">\n                          {user.rate}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Skills\">\n                          {Object.values(user.skills).join(', ')}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Official\">\n                          $60.00\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Config Info\">\n                          Data disk type: MongoDB\n                          <br />\n                          Database version: 3.4\n                          <br />\n                          Package: dds.mongo.mid\n                          <br />\n                          Storage space: 10 GB\n                          <br />\n                          Replication factor: 3\n                          <br />\n                          Region: East China 1\n                        </Descriptions.Item>\n                      </Descriptions>\n                      <Row className=\"justify-content-end mt-4 mr-2\">\n                        <Button\n                          onClick={() => this.banUserAction()}\n                          type={this.state.banAction ? 'primary' : 'danger'}\n                        >\n                          {this.state.banAction ? 'Unban' : 'Ban'}\n                        </Button>\n                      </Row>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}