{"ast":null,"code":"import _objectSpread from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/badge/style\";\nimport _Badge from \"antd/es/badge\";\nvar _jsxFileName = \"/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Users/User.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const token = JSON.parse(localStorage.getItem('token'));\n      if (token) this.setState({\n        token\n      });\n      const userData = await this.getUsers(token);\n      let user = null;\n      let banAction = false;\n\n      if (userData) {\n        user = userData.find(user => user._id.toString() === this.props.match.params.id);\n\n        if (user) {\n          if (user.status === 'banned') banAction = true;\n          user.picture = React.createElement(\"img\", {\n            src: user.picture,\n            style: {\n              height: 250,\n              width: 250,\n              objectFit: 'cover',\n              borderRadius: 125\n            },\n            alt: \"profile\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          });\n          user.status = React.createElement(_Badge, {\n            className: \"ml-2\",\n            status: this.getBadge(user.status),\n            text: user.status,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          });\n          user.date = new Date(user.date).toLocaleString();\n          user.address = Object.values(user.address).join(', ');\n          user.skills = Object.values(user.skills).join(', ');\n          user.wages = user.wages + ' VND/night';\n        }\n\n        this.setState({\n          user: user,\n          banAction\n        });\n      }\n    };\n\n    this.getBadge = status => {\n      return status === 'active' ? 'success' : status === 'inactive' ? 'default' : status === 'banned' ? 'error' : 'primary';\n    };\n\n    this.getUsers = async token => {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      };\n\n      try {\n        const response = await fetch('https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/users', requestOptions);\n        let userData = await this.handleResponse(response);\n        this.setState({\n          loading: false,\n          userData: userData\n        });\n        return userData;\n      } catch (err) {\n        return err;\n      }\n    };\n\n    this.banUserAction = async () => {\n      this.setState({\n        loading: true\n      });\n      const requestOptions = {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.state.token}`\n        }\n      };\n\n      try {\n        const response = await fetch(`https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/ban-user/${this.state.user._id}`, requestOptions);\n        const data = await this.handleResponse(response);\n        let user = this.state.user;\n        user.status = React.createElement(_Badge, {\n          className: \"ml-2\",\n          status: this.getBadge(user.status),\n          text: user.status,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        });\n        this.setState({\n          loading: false,\n          user,\n          banAction: !this.state.banAction\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      loading: true,\n      banAction: false,\n      userData: [],\n      user: null,\n      token: null\n    };\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        if (response.status === 401) {} // auto logout if 401 response returned from api\n        // logoutUser();\n        // const error = (data && data.message) || response.statusText;\n        // return Promise.reject(error);\n\n\n        return data;\n      }\n\n      return data;\n    });\n  }\n\n  render() {\n    let user = this.state.user;\n\n    if (!user) {\n      user = {\n        id: 'Not found'\n      };\n    }\n\n    const details = [['Name', user.name], ['Email', user.email], ['Address', user.address], ['Role', user.role], ['Skills', user.skills], ['Date registered', user.date], ['Wages', user.wages], ['Status', user.status], ['Introduction', user.introduction]];\n    return React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(LoadingOverlay, {\n      active: this.state.loading,\n      spinner: true,\n      text: \"Loading...\",\n      styles: {\n        overlay: base => _objectSpread({}, base, {\n          background: 'rgba(255, 255, 255, 0.5)',\n          color: 'black'\n        }),\n        spinner: base => _objectSpread({}, base, {\n          width: '100px',\n          '& svg circle': {\n            stroke: 'rgba(255, 0, 0, 0.5)'\n          }\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon-info pr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), \"User id:\", ' ', this.props.match.params.id)), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 3,\n      className: \" mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-center font-weight-bold mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-uppercase name-font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, user.name)), React.createElement(Row, {\n      className: \"justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, user.picture)), React.createElement(Col, {\n      className: \"ml-4 mt-4\",\n      lg: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Table, {\n      responsive: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, details.map(([key, value]) => {\n      return React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, `${key}:`), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, value)));\n    }))), React.createElement(Row, {\n      className: \"justify-content-end mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.banUserAction(),\n      type: \"button\",\n      className: `btn ${this.state.banAction ? 'btn-success' : 'btn-danger'}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, this.state.banAction ? 'Unban' : 'Ban'))))))))));\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Users/User.js"],"names":["React","Component","Card","CardBody","CardHeader","Col","Row","Table","LoadingOverlay","User","constructor","props","componentDidMount","token","JSON","parse","localStorage","getItem","setState","userData","getUsers","user","banAction","find","_id","toString","match","params","id","status","picture","height","width","objectFit","borderRadius","getBadge","date","Date","toLocaleString","address","Object","values","join","skills","wages","requestOptions","method","headers","Authorization","response","fetch","handleResponse","loading","err","banUserAction","state","data","console","log","text","then","ok","render","details","name","email","role","introduction","overlay","base","background","color","spinner","stroke","map","key","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\nimport { Badge } from 'antd';\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      banAction: false,\n      userData: [],\n      user: null,\n      token: null\n    };\n  }\n\n  componentDidMount = async () => {\n    const token = JSON.parse(localStorage.getItem('token'));\n    if (token) this.setState({ token });\n    const userData = await this.getUsers(token);\n    let user = null;\n    let banAction = false;\n\n    if (userData) {\n      user = userData.find(\n        user => user._id.toString() === this.props.match.params.id\n      );\n\n      if (user) {\n        if (user.status === 'banned') banAction = true;\n        user.picture = (\n          <img\n            src={user.picture}\n            style={{\n              height: 250,\n              width: 250,\n              objectFit: 'cover',\n              borderRadius: 125\n            }}\n            alt=\"profile\"\n          />\n        );\n        user.status = (\n          <Badge\n            className=\"ml-2\"\n            status={this.getBadge(user.status)}\n            text={user.status}\n          ></Badge>\n        );\n        user.date = new Date(user.date).toLocaleString();\n        user.address = Object.values(user.address).join(', ');\n        user.skills = Object.values(user.skills).join(', ');\n        user.wages = user.wages + ' VND/night';\n      }\n\n      this.setState({ user: user, banAction });\n    }\n  };\n\n  getBadge = status => {\n    return status === 'active'\n      ? 'success'\n      : status === 'inactive'\n      ? 'default'\n      : status === 'banned'\n      ? 'error'\n      : 'primary';\n  };\n\n  getUsers = async token => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n    try {\n      const response = await fetch(\n        'https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/users',\n        requestOptions\n      );\n\n      let userData = await this.handleResponse(response);\n\n      this.setState({ loading: false, userData: userData });\n\n      return userData;\n    } catch (err) {\n      return err;\n    }\n  };\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n        if (response.status === 401) {\n          // auto logout if 401 response returned from api\n          // logoutUser();\n        }\n\n        // const error = (data && data.message) || response.statusText;\n        // return Promise.reject(error);\n        return data;\n      }\n      return data;\n    });\n  }\n\n  banUserAction = async () => {\n    this.setState({ loading: true });\n    const requestOptions = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.state.token}`\n      }\n    };\n    try {\n      const response = await fetch(\n        `https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/ban-user/${this.state.user._id}`,\n        requestOptions\n      );\n\n      const data = await this.handleResponse(response);\n      let user = this.state.user;\n      user.status = (\n        <Badge\n          className=\"ml-2\"\n          status={this.getBadge(user.status)}\n          text={user.status}\n        ></Badge>\n      );\n\n      this.setState({ loading: false, user, banAction: !this.state.banAction });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  render() {\n    let user = this.state.user;\n    if (!user) {\n      user = { id: 'Not found' };\n    }\n\n    const details = [\n      ['Name', user.name],\n      ['Email', user.email],\n      ['Address', user.address],\n      ['Role', user.role],\n      ['Skills', user.skills],\n      ['Date registered', user.date],\n      ['Wages', user.wages],\n      ['Status', user.status],\n      ['Introduction', user.introduction]\n    ];\n\n    return (\n      <div className=\"animated fadeIn\">\n        <LoadingOverlay\n          active={this.state.loading}\n          spinner\n          text=\"Loading...\"\n          styles={{\n            overlay: base => ({\n              ...base,\n              background: 'rgba(255, 255, 255, 0.5)',\n              color: 'black'\n            }),\n            spinner: base => ({\n              ...base,\n              width: '100px',\n              '& svg circle': {\n                stroke: 'rgba(255, 0, 0, 0.5)'\n              }\n            })\n          }}\n        >\n          <Row className=\"justify-content-center\">\n            <Col lg={12}>\n              <Card>\n                <CardHeader className=\"bg-dark\">\n                  <strong>\n                    <i className=\"icon-info pr-1\"></i>User id:{' '}\n                    {this.props.match.params.id}\n                  </strong>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col lg={3} className=\" mt-4\">\n                      <Row className=\"justify-content-center font-weight-bold mb-3\">\n                        <h2 className=\"text-uppercase name-font\">\n                          {user.name}\n                        </h2>\n                      </Row>\n                      <Row className=\"justify-content-center\">\n                        {user.picture}\n                      </Row>\n                      {/* <Table responsive hover>\n                        <tbody>\n                          {userDetails.map(([key, value]) => {\n                            if (\n                              key !== \"_id\" &&\n                              key !== \"googleProvider\" &&\n                              key !== \"facebookProvider\"\n                            )\n                              return (\n                                <tr key={key}>\n                                  <td>{`${key}:`}</td>\n                                  <td>\n                                    <strong>{value}</strong>\n                                  </td>\n                                </tr>\n                              );\n                          })}\n                        </tbody>\n                      </Table> */}\n                    </Col>\n                    <Col className=\"ml-4 mt-4\" lg={8}>\n                      <Table responsive bordered hover>\n                        <tbody>\n                          {details.map(([key, value]) => {\n                            return (\n                              <tr key={key}>\n                                <td>{`${key}:`}</td>\n                                <td>\n                                  <strong>{value}</strong>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </Table>\n                      <Row className=\"justify-content-end mr-2\">\n                        <button\n                          onClick={() => this.banUserAction()}\n                          type=\"button\"\n                          className={`btn ${\n                            this.state.banAction ? 'btn-success' : 'btn-danger'\n                          }`}\n                        >\n                          {this.state.banAction ? 'Unban' : 'Ban'}\n                        </button>\n                      </Row>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}