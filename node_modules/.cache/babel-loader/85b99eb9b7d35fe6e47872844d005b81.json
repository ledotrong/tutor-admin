{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Accounts/DeleteModal.js\";\nimport React, { Component } from 'react';\n\nclass DeleteModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n      loading: false,\n      role: 'admin',\n      name: '',\n      email: '',\n      imageFile: null,\n      imageURL: null,\n      picture: null,\n      address: '',\n      password: ''\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  componentDidMount() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    const currentUser = this.props.currentUser;\n    if (token) this.setState({\n      token\n    });\n    this.setState({\n      name: currentUser.name,\n      email: currentUser.email,\n      address: currentUser.address,\n      role: currentUser.role\n    });\n  }\n\n  onChangeHandler(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        return data;\n      }\n\n      return data;\n    });\n  }\n\n  async onSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      loading: true\n    });\n    this.sendRequest(null);\n  }\n\n  async sendRequest(image) {\n    const requestOptions = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.state.token}`\n      },\n      body: JSON.stringify({\n        _id: this.props.currentUser._id,\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        address: this.state.address,\n        role: this.state.role,\n        picture: image ? image : this.props.currentUser.picture\n      })\n    };\n\n    try {\n      const response = await fetch('https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/updateUser', requestOptions);\n      let data = await this.handleResponse(response);\n\n      if (data.updated) {\n        _message.success('Account updated successfully');\n\n        this.props.handleSubmit();\n      } else _message.error(data);\n\n      this.setState({\n        loading: false\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const modalVisible = this.props.modalVisible;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 18\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 28\n        },\n        sm: {\n          span: 17\n        }\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(_Modal, {\n      title: `Edit user with ID: ${this.props.currentUser ? this.props.currentUser._id : null}`,\n      visible: modalVisible,\n      onOk: () => this.onSubmit(),\n      onCancel: this.props.handleCancel,\n      footer: [React.createElement(_Button, {\n        onClick: this.props.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(_Button, {\n        key: \"Submit\",\n        loading: this.state.loading,\n        type: \"primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Submit\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Are you sure to delete this account? (ID:\", ' ', this.props.currentUser ? this.props.currentUser._id : null, \")\"))));\n  }\n\n}\n\nexport default DeleteModal;","map":{"version":3,"sources":["/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Accounts/DeleteModal.js"],"names":["React","Component","DeleteModal","constructor","props","state","token","loading","role","name","email","imageFile","imageURL","picture","address","password","onChangeHandler","bind","onSubmit","handleUpload","componentDidMount","JSON","parse","localStorage","getItem","currentUser","setState","e","target","value","handleResponse","response","text","then","data","ok","preventDefault","sendRequest","image","requestOptions","method","headers","Authorization","body","stringify","_id","fetch","updated","success","handleSubmit","error","err","console","log","render","modalVisible","formItemLayout","labelCol","xs","span","sm","wrapperCol","handleCancel"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  message,\n  Upload,\n  Button,\n  Modal,\n  Form,\n  Input,\n  Select,\n  Icon\n} from 'antd';\n\nclass DeleteModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n      loading: false,\n      role: 'admin',\n      name: '',\n      email: '',\n      imageFile: null,\n      imageURL: null,\n      picture: null,\n      address: '',\n      password: ''\n    };\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  componentDidMount() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    const currentUser = this.props.currentUser;\n    if (token) this.setState({ token });\n\n    this.setState({\n      name: currentUser.name,\n      email: currentUser.email,\n      address: currentUser.address,\n      role: currentUser.role\n    });\n  }\n\n  onChangeHandler(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n        return data;\n      }\n      return data;\n    });\n  }\n\n  async onSubmit(e) {\n    e.preventDefault();\n    this.setState({ loading: true });\n\n    this.sendRequest(null);\n  }\n\n  async sendRequest(image) {\n    const requestOptions = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.state.token}`\n      },\n      body: JSON.stringify({\n        _id: this.props.currentUser._id,\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        address: this.state.address,\n        role: this.state.role,\n        picture: image ? image : this.props.currentUser.picture\n      })\n    };\n    try {\n      const response = await fetch(\n        'https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/updateUser',\n        requestOptions\n      );\n      let data = await this.handleResponse(response);\n      if (data.updated) {\n        message.success('Account updated successfully');\n        this.props.handleSubmit();\n      } else message.error(data);\n\n      this.setState({ loading: false });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const modalVisible = this.props.modalVisible;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 18 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 28 },\n        sm: { span: 17 }\n      }\n    };\n\n    return (\n      <div>\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n          <Modal\n            title={`Edit user with ID: ${\n              this.props.currentUser ? this.props.currentUser._id : null\n            }`}\n            visible={modalVisible}\n            onOk={() => this.onSubmit()}\n            onCancel={this.props.handleCancel}\n            footer={[\n              <Button onClick={this.props.handleCancel}>Cancel</Button>,\n              <Button\n                key=\"Submit\"\n                loading={this.state.loading}\n                type=\"primary\"\n                onClick={this.onSubmit}\n              >\n                Submit\n              </Button>\n            ]}\n          >\n            <p>\n              Are you sure to delete this account? (ID:{' '}\n              {this.props.currentUser ? this.props.currentUser._id : null})\n            </p>\n          </Modal>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default DeleteModal;\n"]},"metadata":{},"sourceType":"module"}