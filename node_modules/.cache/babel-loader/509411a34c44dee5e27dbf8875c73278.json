{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport _objectSpread from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Accounts/Accounts.js\";\nimport React, { Component } from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport { Card, CardBody, CardHeader, Col } from 'reactstrap';\nimport LoadingOverlay from 'react-loading-overlay';\nimport AddModal from './AddModal';\nimport EditModal from './EditModal';\nimport DeleteModal from './DeleteModal';\nconst Text = _Typography.Text;\nconst Option = _Select.Option;\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = async () => {\n      // const token = localStorage.removeItem(\"token\");\n      const token = JSON.parse(localStorage.getItem('token'));\n\n      if (token) {\n        this.setState({\n          token\n        });\n      } else {\n        this.props.history.push('/login');\n      }\n    };\n\n    this.getBadge = status => {\n      return status === 'active' ? 'success' : status === 'inactive' ? 'secondary' : status === 'pending' ? 'warning' : status === 'banned' ? 'danger' : 'primary';\n    };\n\n    this.getUsers = async () => {\n      this.setState({\n        loading: true\n      });\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.state.token}`\n        }\n      };\n\n      try {\n        const response = await fetch('https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/admin', requestOptions);\n        let userData = await this.handleResponse(response);\n\n        if (this.state.roleFilter !== 'all') {\n          userData = userData.filter(data => data.role === this.state.roleFilter);\n        }\n\n        userData.forEach((element, index) => {\n          let date = new Date(element.date);\n          element.index = index + 1;\n          element.date = date.toLocaleDateString();\n          element.roleTag = element.role === 'master' ? React.createElement(_Tag, {\n            color: \"magenta\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, element.role) : React.createElement(_Tag, {\n            color: \"geekblue\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, element.role);\n          element.profile = React.createElement(\"img\", {\n            src: element.picture,\n            style: {\n              height: 50,\n              width: 50,\n              objectFit: 'cover',\n              borderRadius: 25\n            },\n            alt: \"profile\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          });\n          element.actions = React.createElement(\"div\", {\n            className: \"float-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          }, React.createElement(_Button, {\n            className: \"mr-2\",\n            onClick: () => this.toggleEditModal(element),\n            type: \"primary\",\n            icon: \"edit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, \"Edit\"), React.createElement(_Button, {\n            onClick: () => this.toggleDeleteModal(element),\n            type: \"danger\",\n            icon: \"delete\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, \"Delete\"));\n        });\n        this.setState({\n          loading: false,\n          userData: userData\n        });\n        return userData;\n      } catch (err) {\n        return err;\n      }\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        modalVisible: false,\n        editModalVisible: false,\n        deleteModalVisible: false\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.setState({\n        modalVisible: false,\n        editModalVisible: false,\n        deleteModalVisible: false\n      });\n      this.getUsers();\n    };\n\n    this.state = {\n      token: null,\n      loading: true,\n      modalVisible: false,\n      editModalVisible: false,\n      deleteModalVisible: false,\n      currentUser: null,\n      role: 'admin',\n      userData: [],\n      modal: null,\n      roleFilter: 'all',\n      columns: [{\n        label: 'ID',\n        field: 'index',\n        sort: 'asc',\n        width: 50\n      }, {\n        label: 'Picture',\n        field: 'profile',\n        sort: 'asc',\n        width: 100\n      }, {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc',\n        width: 150\n      }, {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 150\n      }, {\n        label: 'Registered',\n        field: 'date',\n        sort: 'asc',\n        width: 100\n      }, {\n        label: 'Role',\n        field: 'roleTag',\n        sort: 'asc',\n        width: 100\n      }, {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 100\n      }, {\n        label: 'Actions',\n        field: 'actions',\n        sort: 'asc',\n        width: 100\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        if (response.status === 401) {} // auto logout if 401 response returned from api\n        // logoutUser();\n        // const error = (data && data.message) || response.statusText;\n        // return Promise.reject(error);\n\n\n        return data;\n      }\n\n      return data;\n    });\n  }\n\n  onChangeRoleFilter(e) {\n    this.setState({\n      roleFilter: e.target.value\n    });\n    this.getUsers();\n  }\n\n  toggleModal() {\n    this.setState({\n      modalVisible: true\n    });\n  }\n\n  toggleEditModal(user) {\n    this.setState({\n      editModalVisible: true,\n      currentUser: user\n    });\n  }\n\n  toggleDeleteModal(user) {\n    this.setState({\n      deleteModalVisible: true,\n      currentUser: user\n    });\n  }\n\n  onSubmit() {\n    this.setState({\n      modalVisible: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(LoadingOverlay, {\n      active: this.state.loading,\n      spinner: true,\n      text: \"Loading...\",\n      styles: {\n        overlay: base => _objectSpread({}, base, {\n          background: 'rgba(255, 255, 255, 0.5)',\n          color: 'black'\n        }),\n        spinner: base => _objectSpread({}, base, {\n          width: '100px',\n          '& svg circle': {\n            stroke: 'rgba(255, 0, 0, 0.5)'\n          }\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xl: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-align-justify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), \"Accounts\", '  ', React.createElement(\"small\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"staff accounts\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(AddModal, {\n      handleCancel: this.handleCancel,\n      handleSubmit: this.handleSubmit,\n      modalVisible: this.state.modalVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), this.state.editModalVisible ? React.createElement(EditModal, {\n      handleCancel: this.handleCancel,\n      handleSubmit: this.handleSubmit,\n      modalVisible: this.state.editModalVisible,\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }) : null, this.state.deleteModalVisible ? React.createElement(DeleteModal, {\n      handleCancel: this.handleCancel,\n      handleSubmit: this.handleSubmit,\n      modalVisible: this.state.deleteModalVisible,\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }) : null, React.createElement(_Row, {\n      className: \"mt-2\",\n      type: \"flex\",\n      justify: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(_Radio.Group, {\n      defaultValue: \"a\",\n      size: \"small\",\n      buttonStyle: \"solid\",\n      onChange: e => this.onChangeRoleFilter(e),\n      value: this.state.roleFilter,\n      className: \"mr-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(_Radio.Button, {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"All\"), React.createElement(_Radio.Button, {\n      value: \"master\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Master\"), React.createElement(_Radio.Button, {\n      value: \"admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Admin\")), React.createElement(_Button, {\n      type: \"primary\",\n      icon: \"user-add\",\n      style: {\n        backgroundColor: '#00d77d',\n        borderColor: '#00d77d'\n      },\n      onClick: () => this.toggleModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Create\")), React.createElement(MDBDataTable, {\n      responsive: true,\n      hover: true,\n      bordered: true,\n      data: {\n        columns: this.state.columns,\n        rows: this.state.userData\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Accounts;","map":{"version":3,"sources":["/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Accounts/Accounts.js"],"names":["React","Component","MDBDataTable","Card","CardBody","CardHeader","Col","LoadingOverlay","AddModal","EditModal","DeleteModal","Text","Option","Accounts","constructor","props","componentWillMount","token","JSON","parse","localStorage","getItem","setState","history","push","getBadge","status","getUsers","loading","requestOptions","method","headers","Authorization","state","response","fetch","userData","handleResponse","roleFilter","filter","data","role","forEach","element","index","date","Date","toLocaleDateString","roleTag","profile","picture","height","width","objectFit","borderRadius","actions","toggleEditModal","toggleDeleteModal","err","handleCancel","modalVisible","editModalVisible","deleteModalVisible","handleSubmit","currentUser","modal","columns","label","field","sort","componentDidMount","text","then","ok","onChangeRoleFilter","e","target","value","toggleModal","user","onSubmit","render","overlay","base","background","color","spinner","stroke","backgroundColor","borderColor","rows"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,GAArC,QAAgD,YAAhD;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;MAEQC,I,eAAAA,I;MACAC,M,WAAAA,M;;AAER,MAAMC,QAAN,SAAuBZ,SAAvB,CAAiC;AAC/Ba,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkEnBC,kBAlEmB,GAkEE,YAAY;AAC/B;AACA,YAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAd;;AAEA,UAAIJ,KAAJ,EAAW;AACT,aAAKK,QAAL,CAAc;AAAEL,UAAAA;AAAF,SAAd;AACD,OAFD,MAEO;AACL,aAAKF,KAAL,CAAWQ,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD;AACF,KA3EkB;;AAAA,SAiFnBC,QAjFmB,GAiFRC,MAAM,IAAI;AACnB,aAAOA,MAAM,KAAK,QAAX,GACH,SADG,GAEHA,MAAM,KAAK,UAAX,GACA,WADA,GAEAA,MAAM,KAAK,SAAX,GACA,SADA,GAEAA,MAAM,KAAK,QAAX,GACA,QADA,GAEA,SARJ;AASD,KA3FkB;;AAAA,SA6FnBC,QA7FmB,GA6FR,YAAY;AACrB,WAAKL,QAAL,CAAc;AAAEM,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMC,cAAc,GAAG;AACrBC,QAAAA,MAAM,EAAE,KADa;AAErBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAG,UAAS,KAAKC,KAAL,CAAWhB,KAAM;AAFnC;AAFY,OAAvB;;AAOA,UAAI;AACF,cAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oFAD0B,EAE1BN,cAF0B,CAA5B;AAKA,YAAIO,QAAQ,GAAG,MAAM,KAAKC,cAAL,CAAoBH,QAApB,CAArB;;AAEA,YAAI,KAAKD,KAAL,CAAWK,UAAX,KAA0B,KAA9B,EAAqC;AACnCF,UAAAA,QAAQ,GAAGA,QAAQ,CAACG,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,KAAKR,KAAL,CAAWK,UAAjD,CAAX;AACD;;AAEDF,QAAAA,QAAQ,CAACM,OAAT,CAAiB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACnC,cAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASH,OAAO,CAACE,IAAjB,CAAX;AACAF,UAAAA,OAAO,CAACC,KAAR,GAAgBA,KAAK,GAAG,CAAxB;AACAD,UAAAA,OAAO,CAACE,IAAR,GAAeA,IAAI,CAACE,kBAAL,EAAf;AACAJ,UAAAA,OAAO,CAACK,OAAR,GACEL,OAAO,CAACF,IAAR,KAAiB,QAAjB,GACE;AAAK,YAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAsBE,OAAO,CAACF,IAA9B,CADF,GAGE;AAAK,YAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAuBE,OAAO,CAACF,IAA/B,CAJJ;AAMAE,UAAAA,OAAO,CAACM,OAAR,GACE;AACE,YAAA,GAAG,EAAEN,OAAO,CAACO,OADf;AAEE,YAAA,KAAK,EAAE;AACLC,cAAAA,MAAM,EAAE,EADH;AAELC,cAAAA,KAAK,EAAE,EAFF;AAGLC,cAAAA,SAAS,EAAE,OAHN;AAILC,cAAAA,YAAY,EAAE;AAJT,aAFT;AAQE,YAAA,GAAG,EAAC,SARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYAX,UAAAA,OAAO,CAACY,OAAR,GACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AACE,YAAA,SAAS,EAAC,MADZ;AAEE,YAAA,OAAO,EAAE,MAAM,KAAKC,eAAL,CAAqBb,OAArB,CAFjB;AAGE,YAAA,IAAI,EAAC,SAHP;AAIE,YAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EASE;AACE,YAAA,OAAO,EAAE,MAAM,KAAKc,iBAAL,CAAuBd,OAAvB,CADjB;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,CADF;AAmBD,SAzCD;AA2CA,aAAKrB,QAAL,CAAc;AAAEM,UAAAA,OAAO,EAAE,KAAX;AAAkBQ,UAAAA,QAAQ,EAAEA;AAA5B,SAAd;AACA,eAAOA,QAAP;AACD,OAzDD,CAyDE,OAAOsB,GAAP,EAAY;AACZ,eAAOA,GAAP;AACD;AACF,KAlKkB;;AAAA,SA0LnBC,YA1LmB,GA0LJ,MAAM;AACnB,WAAKrC,QAAL,CAAc;AACZsC,QAAAA,YAAY,EAAE,KADF;AAEZC,QAAAA,gBAAgB,EAAE,KAFN;AAGZC,QAAAA,kBAAkB,EAAE;AAHR,OAAd;AAKD,KAhMkB;;AAAA,SAkMnBC,YAlMmB,GAkMJ,MAAM;AACnB,WAAKzC,QAAL,CAAc;AACZsC,QAAAA,YAAY,EAAE,KADF;AAEZC,QAAAA,gBAAgB,EAAE,KAFN;AAGZC,QAAAA,kBAAkB,EAAE;AAHR,OAAd;AAKA,WAAKnC,QAAL;AACD,KAzMkB;;AAEjB,SAAKM,KAAL,GAAa;AACXhB,MAAAA,KAAK,EAAE,IADI;AAEXW,MAAAA,OAAO,EAAE,IAFE;AAGXgC,MAAAA,YAAY,EAAE,KAHH;AAIXC,MAAAA,gBAAgB,EAAE,KAJP;AAKXC,MAAAA,kBAAkB,EAAE,KALT;AAMXE,MAAAA,WAAW,EAAE,IANF;AAOXvB,MAAAA,IAAI,EAAE,OAPK;AAQXL,MAAAA,QAAQ,EAAE,EARC;AASX6B,MAAAA,KAAK,EAAE,IATI;AAUX3B,MAAAA,UAAU,EAAE,KAVD;AAWX4B,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,KAAK,EAAE,IADT;AAEEC,QAAAA,KAAK,EAAE,OAFT;AAGEC,QAAAA,IAAI,EAAE,KAHR;AAIEjB,QAAAA,KAAK,EAAE;AAJT,OADO,EAOP;AACEe,QAAAA,KAAK,EAAE,SADT;AAEEC,QAAAA,KAAK,EAAE,SAFT;AAGEC,QAAAA,IAAI,EAAE,KAHR;AAIEjB,QAAAA,KAAK,EAAE;AAJT,OAPO,EAaP;AACEe,QAAAA,KAAK,EAAE,MADT;AAEEC,QAAAA,KAAK,EAAE,MAFT;AAGEC,QAAAA,IAAI,EAAE,KAHR;AAIEjB,QAAAA,KAAK,EAAE;AAJT,OAbO,EAmBP;AACEe,QAAAA,KAAK,EAAE,OADT;AAEEC,QAAAA,KAAK,EAAE,OAFT;AAGEC,QAAAA,IAAI,EAAE,KAHR;AAIEjB,QAAAA,KAAK,EAAE;AAJT,OAnBO,EAyBP;AACEe,QAAAA,KAAK,EAAE,YADT;AAEEC,QAAAA,KAAK,EAAE,MAFT;AAGEC,QAAAA,IAAI,EAAE,KAHR;AAIEjB,QAAAA,KAAK,EAAE;AAJT,OAzBO,EA+BP;AACEe,QAAAA,KAAK,EAAE,MADT;AAEEC,QAAAA,KAAK,EAAE,SAFT;AAGEC,QAAAA,IAAI,EAAE,KAHR;AAIEjB,QAAAA,KAAK,EAAE;AAJT,OA/BO,EAqCP;AACEe,QAAAA,KAAK,EAAE,SADT;AAEEC,QAAAA,KAAK,EAAE,SAFT;AAGEC,QAAAA,IAAI,EAAE,KAHR;AAIEjB,QAAAA,KAAK,EAAE;AAJT,OArCO,EA2CP;AACEe,QAAAA,KAAK,EAAE,SADT;AAEEC,QAAAA,KAAK,EAAE,SAFT;AAGEC,QAAAA,IAAI,EAAE,KAHR;AAIEjB,QAAAA,KAAK,EAAE;AAJT,OA3CO;AAXE,KAAb;AA8DD;;AAaDkB,EAAAA,iBAAiB,GAAG;AAClB,SAAK3C,QAAL;AACD;;AAqFDU,EAAAA,cAAc,CAACH,QAAD,EAAW;AACvB,WAAOA,QAAQ,CAACqC,IAAT,GAAgBC,IAAhB,CAAqBD,IAAI,IAAI;AAClC,YAAM/B,IAAI,GAAG+B,IAAI,IAAIrD,IAAI,CAACC,KAAL,CAAWoD,IAAX,CAArB;;AACA,UAAI,CAACrC,QAAQ,CAACuC,EAAd,EAAkB;AAChB,YAAIvC,QAAQ,CAACR,MAAT,KAAoB,GAAxB,EAA6B,CAG5B,CAHD,CACE;AACA;AAGF;AACA;;;AACA,eAAOc,IAAP;AACD;;AACD,aAAOA,IAAP;AACD,KAbM,CAAP;AAcD;;AAEDkC,EAAAA,kBAAkB,CAACC,CAAD,EAAI;AACpB,SAAKrD,QAAL,CAAc;AAAEgB,MAAAA,UAAU,EAAEqC,CAAC,CAACC,MAAF,CAASC;AAAvB,KAAd;AACA,SAAKlD,QAAL;AACD;;AAmBDmD,EAAAA,WAAW,GAAG;AACZ,SAAKxD,QAAL,CAAc;AAAEsC,MAAAA,YAAY,EAAE;AAAhB,KAAd;AACD;;AAEDJ,EAAAA,eAAe,CAACuB,IAAD,EAAO;AACpB,SAAKzD,QAAL,CAAc;AAAEuC,MAAAA,gBAAgB,EAAE,IAApB;AAA0BG,MAAAA,WAAW,EAAEe;AAAvC,KAAd;AACD;;AAEDtB,EAAAA,iBAAiB,CAACsB,IAAD,EAAO;AACtB,SAAKzD,QAAL,CAAc;AAAEwC,MAAAA,kBAAkB,EAAE,IAAtB;AAA4BE,MAAAA,WAAW,EAAEe;AAAzC,KAAd;AACD;;AAEDC,EAAAA,QAAQ,GAAG;AACT,SAAK1D,QAAL,CAAc;AAAEsC,MAAAA,YAAY,EAAE;AAAhB,KAAd;AACD;;AAEDqB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AACE,MAAA,MAAM,EAAE,KAAKhD,KAAL,CAAWL,OADrB;AAEE,MAAA,OAAO,MAFT;AAGE,MAAA,IAAI,EAAC,YAHP;AAIE,MAAA,MAAM,EAAE;AACNsD,QAAAA,OAAO,EAAEC,IAAI,sBACRA,IADQ;AAEXC,UAAAA,UAAU,EAAE,0BAFD;AAGXC,UAAAA,KAAK,EAAE;AAHI,UADP;AAMNC,QAAAA,OAAO,EAAEH,IAAI,sBACRA,IADQ;AAEX/B,UAAAA,KAAK,EAAE,OAFI;AAGX,0BAAgB;AACdmC,YAAAA,MAAM,EAAE;AADM;AAHL;AANP,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,cACkD,IADlD,EAEE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADF,EAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,YAAY,EAAE,KAAK5B,YADrB;AAEE,MAAA,YAAY,EAAE,KAAKI,YAFrB;AAGE,MAAA,YAAY,EAAE,KAAK9B,KAAL,CAAW2B,YAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMG,KAAK3B,KAAL,CAAW4B,gBAAX,GACC,oBAAC,SAAD;AACE,MAAA,YAAY,EAAE,KAAKF,YADrB;AAEE,MAAA,YAAY,EAAE,KAAKI,YAFrB;AAGE,MAAA,YAAY,EAAE,KAAK9B,KAAL,CAAW4B,gBAH3B;AAIE,MAAA,WAAW,EAAE,KAAK5B,KAAL,CAAW+B,WAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAOG,IAbN,EAcG,KAAK/B,KAAL,CAAW6B,kBAAX,GACC,oBAAC,WAAD;AACE,MAAA,YAAY,EAAE,KAAKH,YADrB;AAEE,MAAA,YAAY,EAAE,KAAKI,YAFrB;AAGE,MAAA,YAAY,EAAE,KAAK9B,KAAL,CAAW6B,kBAH3B;AAIE,MAAA,WAAW,EAAE,KAAK7B,KAAL,CAAW+B,WAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAOG,IArBN,EAsBE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,IAAI,EAAC,MAA3B;AAAkC,MAAA,OAAO,EAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,2BAAO,KAAP;AACE,MAAA,YAAY,EAAC,GADf;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,WAAW,EAAC,OAHd;AAIE,MAAA,QAAQ,EAAEW,CAAC,IAAI,KAAKD,kBAAL,CAAwBC,CAAxB,CAJjB;AAKE,MAAA,KAAK,EAAE,KAAK1C,KAAL,CAAWK,UALpB;AAME,MAAA,SAAS,EAAC,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,2BAAO,MAAP;AAAc,MAAA,KAAK,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,EASE,2BAAO,MAAP;AAAc,MAAA,KAAK,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,EAUE,2BAAO,MAAP;AAAc,MAAA,KAAK,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF,CADF,EAaE;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE;AACLkD,QAAAA,eAAe,EAAE,SADZ;AAELC,QAAAA,WAAW,EAAE;AAFR,OAHT;AAOE,MAAA,OAAO,EAAE,MAAM,KAAKX,WAAL,EAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,CAtBF,EA+CE,oBAAC,YAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,QAAQ,MAHV;AAIE,MAAA,IAAI,EAAE;AACJZ,QAAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWiC,OADhB;AAEJwB,QAAAA,IAAI,EAAE,KAAKzD,KAAL,CAAWG;AAFb,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/CF,CALF,CADF,CADF,CAnBF,CADF,CADF;AA2FD;;AAxT8B;;AA2TjC,eAAevB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport { Card, CardBody, CardHeader, Col } from 'reactstrap';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Radio, Row, Typography, Button, Tag, Select } from 'antd';\nimport AddModal from './AddModal';\nimport EditModal from './EditModal';\nimport DeleteModal from './DeleteModal';\n\nconst { Text } = Typography;\nconst { Option } = Select;\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n      loading: true,\n      modalVisible: false,\n      editModalVisible: false,\n      deleteModalVisible: false,\n      currentUser: null,\n      role: 'admin',\n      userData: [],\n      modal: null,\n      roleFilter: 'all',\n      columns: [\n        {\n          label: 'ID',\n          field: 'index',\n          sort: 'asc',\n          width: 50\n        },\n        {\n          label: 'Picture',\n          field: 'profile',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Name',\n          field: 'name',\n          sort: 'asc',\n          width: 150\n        },\n        {\n          label: 'Email',\n          field: 'email',\n          sort: 'asc',\n          width: 150\n        },\n        {\n          label: 'Registered',\n          field: 'date',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Role',\n          field: 'roleTag',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Address',\n          field: 'address',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n          sort: 'asc',\n          width: 100\n        }\n      ]\n    };\n  }\n\n  componentWillMount = async () => {\n    // const token = localStorage.removeItem(\"token\");\n    const token = JSON.parse(localStorage.getItem('token'));\n\n    if (token) {\n      this.setState({ token });\n    } else {\n      this.props.history.push('/login');\n    }\n  };\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  getBadge = status => {\n    return status === 'active'\n      ? 'success'\n      : status === 'inactive'\n      ? 'secondary'\n      : status === 'pending'\n      ? 'warning'\n      : status === 'banned'\n      ? 'danger'\n      : 'primary';\n  };\n\n  getUsers = async () => {\n    this.setState({ loading: true });\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.state.token}`\n      }\n    };\n    try {\n      const response = await fetch(\n        'https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/admin',\n        requestOptions\n      );\n\n      let userData = await this.handleResponse(response);\n\n      if (this.state.roleFilter !== 'all') {\n        userData = userData.filter(data => data.role === this.state.roleFilter);\n      }\n\n      userData.forEach((element, index) => {\n        let date = new Date(element.date);\n        element.index = index + 1;\n        element.date = date.toLocaleDateString();\n        element.roleTag =\n          element.role === 'master' ? (\n            <Tag color=\"magenta\">{element.role}</Tag>\n          ) : (\n            <Tag color=\"geekblue\">{element.role}</Tag>\n          );\n        element.profile = (\n          <img\n            src={element.picture}\n            style={{\n              height: 50,\n              width: 50,\n              objectFit: 'cover',\n              borderRadius: 25\n            }}\n            alt=\"profile\"\n          />\n        );\n        element.actions = (\n          <div className=\"float-right\">\n            <Button\n              className=\"mr-2\"\n              onClick={() => this.toggleEditModal(element)}\n              type=\"primary\"\n              icon=\"edit\"\n            >\n              Edit\n            </Button>\n            <Button\n              onClick={() => this.toggleDeleteModal(element)}\n              type=\"danger\"\n              icon=\"delete\"\n            >\n              Delete\n            </Button>\n          </div>\n        );\n      });\n\n      this.setState({ loading: false, userData: userData });\n      return userData;\n    } catch (err) {\n      return err;\n    }\n  };\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n        if (response.status === 401) {\n          // auto logout if 401 response returned from api\n          // logoutUser();\n        }\n\n        // const error = (data && data.message) || response.statusText;\n        // return Promise.reject(error);\n        return data;\n      }\n      return data;\n    });\n  }\n\n  onChangeRoleFilter(e) {\n    this.setState({ roleFilter: e.target.value });\n    this.getUsers();\n  }\n\n  handleCancel = () => {\n    this.setState({\n      modalVisible: false,\n      editModalVisible: false,\n      deleteModalVisible: false\n    });\n  };\n\n  handleSubmit = () => {\n    this.setState({\n      modalVisible: false,\n      editModalVisible: false,\n      deleteModalVisible: false\n    });\n    this.getUsers();\n  };\n\n  toggleModal() {\n    this.setState({ modalVisible: true });\n  }\n\n  toggleEditModal(user) {\n    this.setState({ editModalVisible: true, currentUser: user });\n  }\n\n  toggleDeleteModal(user) {\n    this.setState({ deleteModalVisible: true, currentUser: user });\n  }\n\n  onSubmit() {\n    this.setState({ modalVisible: false });\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <LoadingOverlay\n          active={this.state.loading}\n          spinner\n          text=\"Loading...\"\n          styles={{\n            overlay: base => ({\n              ...base,\n              background: 'rgba(255, 255, 255, 0.5)',\n              color: 'black'\n            }),\n            spinner: base => ({\n              ...base,\n              width: '100px',\n              '& svg circle': {\n                stroke: 'rgba(255, 0, 0, 0.5)'\n              }\n            })\n          }}\n        >\n          <Row>\n            <Col xl={12}>\n              <Card>\n                <CardHeader className=\"bg-dark\">\n                  <i className=\"fa fa-align-justify\"></i>Accounts{'  '}\n                  <small className=\"text-muted\">staff accounts</small>\n                </CardHeader>\n                <CardBody>\n                  <AddModal\n                    handleCancel={this.handleCancel}\n                    handleSubmit={this.handleSubmit}\n                    modalVisible={this.state.modalVisible}\n                  ></AddModal>\n                  {this.state.editModalVisible ? (\n                    <EditModal\n                      handleCancel={this.handleCancel}\n                      handleSubmit={this.handleSubmit}\n                      modalVisible={this.state.editModalVisible}\n                      currentUser={this.state.currentUser}\n                    ></EditModal>\n                  ) : null}\n                  {this.state.deleteModalVisible ? (\n                    <DeleteModal\n                      handleCancel={this.handleCancel}\n                      handleSubmit={this.handleSubmit}\n                      modalVisible={this.state.deleteModalVisible}\n                      currentUser={this.state.currentUser}\n                    ></DeleteModal>\n                  ) : null}\n                  <Row className=\"mt-2\" type=\"flex\" justify=\"end\">\n                    <Radio.Group\n                      defaultValue=\"a\"\n                      size=\"small\"\n                      buttonStyle=\"solid\"\n                      onChange={e => this.onChangeRoleFilter(e)}\n                      value={this.state.roleFilter}\n                      className=\"mr-4\"\n                    >\n                      <Radio.Button value=\"all\">All</Radio.Button>\n                      <Radio.Button value=\"master\">Master</Radio.Button>\n                      <Radio.Button value=\"admin\">Admin</Radio.Button>\n                    </Radio.Group>\n                    <Button\n                      type=\"primary\"\n                      icon=\"user-add\"\n                      style={{\n                        backgroundColor: '#00d77d',\n                        borderColor: '#00d77d'\n                      }}\n                      onClick={() => this.toggleModal()}\n                    >\n                      Create\n                    </Button>\n                  </Row>\n                  <MDBDataTable\n                    responsive\n                    hover\n                    bordered\n                    data={{\n                      columns: this.state.columns,\n                      rows: this.state.userData\n                    }}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\n\nexport default Accounts;\n"]},"metadata":{},"sourceType":"module"}