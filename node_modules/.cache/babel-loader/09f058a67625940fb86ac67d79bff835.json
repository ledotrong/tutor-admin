{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Accounts/AddModal.js\";\nimport React, { Component } from 'react';\nconst Option = _Select.Option;\n\nclass AddModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n      loading: false,\n      role: 'admin',\n      name: '',\n      email: '',\n      picture: null,\n      address: '',\n      password: ''\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    if (token) this.setState({\n      token\n    });\n  }\n\n  onChangeHandler(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onRoleChange(role) {\n    this.setState({\n      role\n    });\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        return data;\n      }\n\n      return data;\n    });\n  }\n\n  async onSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      loading: true\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.state.token}`\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        address: this.state.address,\n        role: this.state.role,\n        picture: this.state.picture ? this.state.picture : undefined\n      })\n    };\n\n    try {\n      const response = await fetch('https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/user/register', requestOptions);\n      let data = await this.handleResponse(response);\n\n      if (data.newUser) {\n        _message.success('Account created successfully');\n      } else this.setState({\n        loading: false\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const modalVisible = this.props.modalVisible;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 18\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 28\n        },\n        sm: {\n          span: 17\n        }\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(_Modal, {\n      title: \"Create New Account\",\n      visible: modalVisible,\n      onOk: () => this.onSubmit(),\n      onCancel: this.props.handleCancel,\n      footer: [React.createElement(_Button, {\n        onClick: this.props.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(_Button, {\n        key: \"Submit\",\n        loading: this.state.loading,\n        type: \"primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Submit\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      name: \"name\",\n      required: true,\n      placeholder: \"your full name\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      name: \"email\",\n      required: true,\n      placeholder: \"example@email\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      label: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(_Input.Password, {\n      name: \"password\",\n      placeholder: \"at least 6 characters\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      label: \"Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      name: \"address\",\n      required: true,\n      placeholder: \"Eg: 123 Street, Ward,...\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      label: \"Role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(_Select, {\n      value: this.state.role,\n      size: this.props.size,\n      style: {\n        width: '32%'\n      },\n      onChange: value => this.onRoleChange(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Admin\"), React.createElement(Option, {\n      value: \"master\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Master\"))))));\n  }\n\n}\n\nexport default AddModal;","map":{"version":3,"sources":["/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Accounts/AddModal.js"],"names":["React","Component","Option","AddModal","constructor","props","state","token","loading","role","name","email","picture","address","password","onChangeHandler","bind","onSubmit","componentDidMount","JSON","parse","localStorage","getItem","setState","e","target","value","onRoleChange","handleResponse","response","text","then","data","ok","preventDefault","requestOptions","method","headers","Authorization","body","stringify","undefined","fetch","newUser","success","err","console","log","render","modalVisible","formItemLayout","labelCol","xs","span","sm","wrapperCol","handleSubmit","handleCancel","size","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { message, Button, Modal, Form, Input, Select } from 'antd';\n\nconst { Option } = Select;\n\nclass AddModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n      loading: false,\n      role: 'admin',\n      name: '',\n      email: '',\n      picture: null,\n      address: '',\n      password: ''\n    };\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    if (token) this.setState({ token });\n  }\n\n  onChangeHandler(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onRoleChange(role) {\n    this.setState({ role });\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n        return data;\n      }\n      return data;\n    });\n  }\n\n  async onSubmit(e) {\n    e.preventDefault();\n    this.setState({ loading: true });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.state.token}`\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        address: this.state.address,\n        role: this.state.role,\n        picture: this.state.picture ? this.state.picture : undefined\n      })\n    };\n    try {\n      const response = await fetch(\n        'https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/user/register',\n        requestOptions\n      );\n\n      let data = await this.handleResponse(response);\n      if (data.newUser) {\n        message.success('Account created successfully');\n      }\n      else\n        \n\n      this.setState({ loading: false });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const modalVisible = this.props.modalVisible;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 18 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 28 },\n        sm: { span: 17 }\n      }\n    };\n\n    return (\n      <div>\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n          <Modal\n            title=\"Create New Account\"\n            visible={modalVisible}\n            onOk={() => this.onSubmit()}\n            onCancel={this.props.handleCancel}\n            footer={[\n              <Button onClick={this.props.handleCancel}>Cancel</Button>,\n              <Button\n                key=\"Submit\"\n                loading={this.state.loading}\n                type=\"primary\"\n                onClick={this.onSubmit}\n              >\n                Submit\n              </Button>\n            ]}\n          >\n            <Form.Item label=\"Name\">\n              <Input\n                name=\"name\"\n                required\n                placeholder=\"your full name\"\n                onChange={this.onChangeHandler}\n              />\n            </Form.Item>\n            <Form.Item label=\"E-mail\">\n              <Input\n                name=\"email\"\n                required\n                placeholder=\"example@email\"\n                onChange={this.onChangeHandler}\n              />\n            </Form.Item>\n            <Form.Item label=\"Password\">\n              <Input.Password\n                name=\"password\"\n                placeholder=\"at least 6 characters\"\n                onChange={this.onChangeHandler}\n              />\n            </Form.Item>\n            <Form.Item label=\"Address\">\n              <Input\n                name=\"address\"\n                required\n                placeholder=\"Eg: 123 Street, Ward,...\"\n                onChange={this.onChangeHandler}\n              />\n            </Form.Item>\n            <Form.Item label=\"Role\">\n              <Select\n                value={this.state.role}\n                size={this.props.size}\n                style={{ width: '32%' }}\n                onChange={value => this.onRoleChange(value)}\n              >\n                <Option value=\"admin\">Admin</Option>\n                <Option value=\"master\">Master</Option>\n              </Select>\n            </Form.Item>\n          </Modal>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default AddModal;\n"]},"metadata":{},"sourceType":"module"}