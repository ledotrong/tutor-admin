{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Accounts/EditModal.js\";\nimport React, { Component } from 'react';\nimport { storage } from '../../helpers/Firebase';\nimport firebase from '../../helpers/Firebase';\nconst Option = _Select.Option;\n\n_message.config({\n  top: 70\n});\n\nclass EditModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n      loading: false,\n      role: 'admin',\n      name: '',\n      email: '',\n      imageFile: null,\n      imageURL: null,\n      picture: null,\n      address: '',\n      password: ''\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  componentDidMount() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    const currentUser = this.props.currentUser;\n    if (token) this.setState({\n      token\n    });\n    this.setState({\n      name: currentUser.name,\n      email: currentUser.email,\n      address: currentUser.address,\n      role: currentUser.role\n    });\n  }\n\n  onChangeHandler(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onRoleChange(role) {\n    this.setState({\n      role\n    });\n  }\n\n  beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n    if (!isJpgOrPng) {\n      _message.error('You can only upload JPG/PNG file!');\n    }\n\n    const isLt2M = file.size / 1024 / 1024 < 2;\n\n    if (!isLt2M) {\n      _message.error('Image must smaller than 2MB!');\n    }\n\n    return isJpgOrPng && isLt2M;\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        return data;\n      }\n\n      return data;\n    });\n  }\n\n  handleUpload(info) {\n    if (info.file.status === 'uploading') {\n      this.setState({\n        loading: true\n      });\n      return;\n    }\n\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageURL => this.setState({\n        imageURL,\n        imageFile: info.file.originFileObj,\n        loading: false\n      }));\n    }\n  }\n\n  getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  async onSubmit(e) {\n    e.preventDefault();\n    console.log(this.state);\n    this.setState({\n      loading: true\n    });\n    const imageFile = this.state.imageFile;\n\n    if (imageFile) {\n      const uploadImage = storage.ref(`images/${imageFile.name}`).put(imageFile);\n      uploadImage.on('state_changed', () => {// console.log(snapshot);\n      }, error => {\n        console.log(error);\n      }, async () => {\n        const imageURL = await storage.ref('images').child(imageFile.name).getDownloadURL();\n        this.setState({\n          picture: imageURL\n        });\n        this.sendRequest(imageURL);\n      });\n    } else {\n      this.sendRequest(null);\n    }\n  }\n\n  async sendRequest(image) {\n    const requestOptions = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.state.token}`\n      },\n      body: JSON.stringify({\n        _id: this.props.currentUser._id,\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        address: this.state.address,\n        role: this.state.role,\n        picture: image ? image : this.props.currentUser.picture\n      })\n    };\n\n    try {\n      const response = await fetch('https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/updateUser', requestOptions);\n      let data = await this.handleResponse(response);\n\n      if (data.updated) {\n        _message.success('Account updated successfully');\n\n        this.props.handleSubmit();\n      } else _message.error(data);\n\n      this.setState({\n        loading: false\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const modalVisible = this.props.modalVisible;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 18\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 28\n        },\n        sm: {\n          span: 17\n        }\n      }\n    };\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: this.state.loading ? 'loading' : 'plus',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Upload\"));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(_Modal, {\n      title: `Edit user with ID: ${this.props.currentUser ? this.props.currentUser._id : null}`,\n      visible: modalVisible,\n      onOk: () => this.onSubmit(),\n      onCancel: this.props.handleCancel,\n      footer: [React.createElement(_Button, {\n        onClick: this.props.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(_Button, {\n        key: \"Submit\",\n        loading: this.state.loading,\n        type: \"primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Submit\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(_Upload, {\n      name: \"avatar\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader d-flex justify-content-center mb-2\",\n      showUploadList: false,\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      beforeUpload: this.beforeUpload,\n      onChange: this.handleUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, this.state.imageURL ? React.createElement(\"img\", {\n      src: this.state.imageURL,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }) : this.props.currentUser ? React.createElement(\"img\", {\n      src: this.props.currentUser.picture,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }) : uploadButton), React.createElement(_Form.Item, {\n      label: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      name: \"name\",\n      required: true,\n      value: this.state.name,\n      placeholder: \"your full name\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      name: \"email\",\n      value: this.state.email,\n      required: true,\n      placeholder: \"example@email\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      label: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(_Input.Password, {\n      name: \"password\",\n      placeholder: \"at least 6 characters\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      label: \"Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      name: \"address\",\n      value: this.state.name,\n      required: true,\n      placeholder: \"Eg: 123 Street, Ward,...\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    })), React.createElement(_Form.Item, {\n      label: \"Role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(_Select, {\n      defaultValue: this.props.currentUser ? this.props.currentUser.role : this.state.role,\n      size: this.props.size,\n      style: {\n        width: '32%'\n      },\n      onChange: value => this.onRoleChange(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Admin\"), React.createElement(Option, {\n      value: \"master\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Master\"))))));\n  }\n\n}\n\nexport default EditModal;","map":{"version":3,"sources":["/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Accounts/EditModal.js"],"names":["React","Component","storage","firebase","Option","config","top","EditModal","constructor","props","state","token","loading","role","name","email","imageFile","imageURL","picture","address","password","onChangeHandler","bind","onSubmit","handleUpload","componentDidMount","JSON","parse","localStorage","getItem","currentUser","setState","e","target","value","onRoleChange","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","handleResponse","response","text","then","data","ok","info","status","getBase64","originFileObj","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","preventDefault","console","log","uploadImage","ref","put","on","child","getDownloadURL","sendRequest","image","requestOptions","method","headers","Authorization","body","stringify","_id","fetch","updated","success","handleSubmit","err","render","modalVisible","formItemLayout","labelCol","xs","span","sm","wrapperCol","uploadButton","handleCancel","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  message,\n  Upload,\n  Button,\n  Modal,\n  Form,\n  Input,\n  Select,\n  Icon\n} from 'antd';\nimport { storage } from '../../helpers/Firebase';\nimport firebase from '../../helpers/Firebase';\n\nconst { Option } = Select;\nmessage.config({\n  top: 70\n});\n\nclass EditModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n      loading: false,\n      role: 'admin',\n      name: '',\n      email: '',\n      imageFile: null,\n      imageURL: null,\n      picture: null,\n      address: '',\n      password: ''\n    };\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  componentDidMount() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    const currentUser = this.props.currentUser;\n    if (token) this.setState({ token });\n\n    this.setState({\n      name: currentUser.name,\n      email: currentUser.email,\n      address: currentUser.address,\n      role: currentUser.role\n    });\n  }\n\n  onChangeHandler(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onRoleChange(role) {\n    this.setState({ role });\n  }\n\n  beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n        return data;\n      }\n      return data;\n    });\n  }\n\n  handleUpload(info) {\n    if (info.file.status === 'uploading') {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageURL =>\n        this.setState({\n          imageURL,\n          imageFile: info.file.originFileObj,\n          loading: false\n        })\n      );\n    }\n  }\n\n  getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  async onSubmit(e) {\n    e.preventDefault();\n    console.log(this.state);\n    this.setState({ loading: true });\n\n    const { imageFile } = this.state;\n    if (imageFile) {\n      const uploadImage = storage\n        .ref(`images/${imageFile.name}`)\n        .put(imageFile);\n      uploadImage.on(\n        'state_changed',\n        () => {\n          // console.log(snapshot);\n        },\n        error => {\n          console.log(error);\n        },\n        async () => {\n          const imageURL = await storage\n            .ref('images')\n            .child(imageFile.name)\n            .getDownloadURL();\n          this.setState({ picture: imageURL });\n          this.sendRequest(imageURL);\n        }\n      );\n    } else {\n      this.sendRequest(null);\n    }\n  }\n\n  async sendRequest(image) {\n    const requestOptions = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.state.token}`\n      },\n      body: JSON.stringify({\n        _id: this.props.currentUser._id,\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        address: this.state.address,\n        role: this.state.role,\n        picture: image ? image : this.props.currentUser.picture\n      })\n    };\n    try {\n      const response = await fetch(\n        'https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/updateUser',\n        requestOptions\n      );\n      let data = await this.handleResponse(response);\n      if (data.updated) {\n        message.success('Account updated successfully');\n        this.props.handleSubmit();\n      } else message.error(data);\n\n      this.setState({ loading: false });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const modalVisible = this.props.modalVisible;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 18 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 28 },\n        sm: { span: 17 }\n      }\n    };\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? 'loading' : 'plus'} />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n\n    return (\n      <div>\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n          <Modal\n            title={`Edit user with ID: ${\n              this.props.currentUser ? this.props.currentUser._id : null\n            }`}\n            visible={modalVisible}\n            onOk={() => this.onSubmit()}\n            onCancel={this.props.handleCancel}\n            footer={[\n              <Button onClick={this.props.handleCancel}>Cancel</Button>,\n              <Button\n                key=\"Submit\"\n                loading={this.state.loading}\n                type=\"primary\"\n                onClick={this.onSubmit}\n              >\n                Submit\n              </Button>\n            ]}\n          >\n            <Upload\n              name=\"avatar\"\n              listType=\"picture-card\"\n              className=\"avatar-uploader d-flex justify-content-center mb-2\"\n              showUploadList={false}\n              action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n              beforeUpload={this.beforeUpload}\n              onChange={this.handleUpload}\n            >\n              {this.state.imageURL ? (\n                <img\n                  src={this.state.imageURL}\n                  alt=\"avatar\"\n                  style={{ width: '100%' }}\n                />\n              ) : this.props.currentUser ? (\n                <img\n                  src={this.props.currentUser.picture}\n                  alt=\"avatar\"\n                  style={{ width: '100%' }}\n                />\n              ) : (\n                uploadButton\n              )}\n            </Upload>\n            <Form.Item label=\"Name\">\n              <Input\n                name=\"name\"\n                required\n                value={this.state.name}\n                placeholder=\"your full name\"\n                onChange={this.onChangeHandler}\n              />\n            </Form.Item>\n            <Form.Item label=\"E-mail\">\n              <Input\n                name=\"email\"\n                value={this.state.email}\n                required\n                placeholder=\"example@email\"\n                onChange={this.onChangeHandler}\n              />\n            </Form.Item>\n            <Form.Item label=\"Password\">\n              <Input.Password\n                name=\"password\"\n                placeholder=\"at least 6 characters\"\n                onChange={this.onChangeHandler}\n              />\n            </Form.Item>\n            <Form.Item label=\"Address\">\n              <Input\n                name=\"address\"\n                value={this.state.name}\n                required\n                placeholder=\"Eg: 123 Street, Ward,...\"\n                onChange={this.onChangeHandler}\n              />\n            </Form.Item>\n            <Form.Item label=\"Role\">\n              <Select\n                defaultValue={\n                  this.props.currentUser\n                    ? this.props.currentUser.role\n                    : this.state.role\n                }\n                size={this.props.size}\n                style={{ width: '32%' }}\n                onChange={value => this.onRoleChange(value)}\n              >\n                <Option value=\"admin\">Admin</Option>\n                <Option value=\"master\">Master</Option>\n              </Select>\n            </Form.Item>\n          </Modal>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default EditModal;\n"]},"metadata":{},"sourceType":"module"}