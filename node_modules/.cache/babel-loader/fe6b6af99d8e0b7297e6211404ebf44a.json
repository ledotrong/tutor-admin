{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport _objectSpread from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/badge/style\";\nimport _Badge from \"antd/es/badge\";\nimport \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Contracts/Contracts.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport { Card, CardBody, CardHeader, Col } from 'reactstrap';\nimport LoadingOverlay from 'react-loading-overlay';\nconst Text = _Typography.Text;\n\nclass Contracts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = async () => {\n      // const token = localStorage.removeItem(\"token\");\n      const token = JSON.parse(localStorage.getItem('token'));\n\n      if (token) {\n        this.setState({\n          token\n        });\n      } else {\n        this.props.history.push('/login');\n      }\n    };\n\n    this.getBadge = status => {\n      return status === 'request' ? 'success' : status === 'finished' ? 'default' : status === 'complain' ? 'error' : 'primary';\n    };\n\n    this.getUsers = async () => {\n      this.setState({\n        loading: true\n      });\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.state.token}`\n        }\n      };\n\n      try {\n        const response = await fetch('https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/contracts', requestOptions);\n        let contractData = await this.handleResponse(response);\n\n        if (this.state.statusFilter !== 'all') {\n          contractData = contractData.filter(data => data.currentStatus === this.state.statusFilter);\n        }\n\n        if (this.state.roleFilter !== 'all') {\n          contractData = contractData.filter(data => data.role === this.state.roleFilter);\n        }\n\n        contractData.forEach((element, index) => {\n          const userLink = `/contracts/${element._id}`; // element.name = <Link to={userLink}>{element.name}</Link>;\n          // element.email = <Link to={userLink}>{element.email}</Link>;\n\n          let date = new Date(element.date);\n          element._id = index + 1;\n          element.currentStatus = React.createElement(Link, {\n            to: userLink,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, React.createElement(_Badge, {\n            status: this.getBadge(element.currentStatus),\n            text: element.currentStatus,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }));\n          element.date = date.toLocaleString();\n          element.actions = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, React.createElement(_Button, {\n            type: \"primary\",\n            to: userLink,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: userLink,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, \"View\")));\n        });\n        this.setState({\n          loading: false,\n          contractData: contractData\n        });\n        return contractData;\n      } catch (err) {\n        return err;\n      }\n    };\n\n    this.state = {\n      token: null,\n      loading: true,\n      contractData: [],\n      statusFilter: 'all',\n      roleFilter: 'all',\n      columns: [{\n        label: 'ID',\n        field: '_id',\n        sort: 'asc',\n        width: 50\n      }, {\n        label: 'Student',\n        field: 'studentName',\n        sort: 'asc',\n        width: 150\n      }, {\n        label: 'Tutor',\n        field: 'tutorName',\n        sort: 'asc',\n        width: 150\n      }, {\n        label: 'Created',\n        field: 'contractCreationDate',\n        sort: 'asc',\n        width: 100\n      }, {\n        label: 'Status',\n        field: 'currentStatus',\n        sort: 'asc',\n        width: 100\n      }, {\n        label: 'Actions',\n        field: 'actions',\n        sort: 'asc',\n        width: 150\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        if (response.status === 401) {} // auto logout if 401 response returned from api\n        // logoutUser();\n        // const error = (data && data.message) || response.statusText;\n        // return Promise.reject(error);\n\n\n        return data;\n      }\n\n      return data;\n    });\n  }\n\n  onChangeStatusFilter(e) {\n    this.setState({\n      statusFilter: e.target.value\n    }); //this.onFilterOut();\n\n    this.getUsers();\n  }\n\n  onChangeRoleFilter(e) {\n    this.setState({\n      roleFilter: e.target.value\n    });\n    this.getUsers();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(LoadingOverlay, {\n      active: this.state.loading,\n      spinner: true,\n      text: \"Loading...\",\n      styles: {\n        overlay: base => _objectSpread({}, base, {\n          background: 'rgba(255, 255, 255, 0.5)',\n          color: 'black'\n        }),\n        spinner: base => _objectSpread({}, base, {\n          width: '100px',\n          '& svg circle': {\n            stroke: 'rgba(255, 0, 0, 0.5)'\n          }\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xl: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-align-justify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), \"Users\", '  ', React.createElement(\"small\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"user database\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      className: \"mt-2\",\n      type: \"flex\",\n      justify: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(_Radio.Group, {\n      defaultValue: \"a\",\n      size: \"small\",\n      buttonStyle: \"solid\",\n      onChange: e => this.onChangeRoleFilter(e),\n      value: this.state.roleFilter,\n      className: \"mr-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(_Radio.Button, {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"All\"), React.createElement(_Radio.Button, {\n      value: \"student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Student\"), React.createElement(_Radio.Button, {\n      value: \"tutor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Tutor\")), React.createElement(_Radio.Group, {\n      defaultValue: \"a\",\n      size: \"small\",\n      buttonStyle: \"solid\",\n      onChange: e => this.onChangeStatusFilter(e),\n      value: this.state.statusFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(_Radio.Button, {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"All\"), React.createElement(_Radio.Button, {\n      value: \"request\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Requesting\"), React.createElement(_Radio.Button, {\n      value: \"finished\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Finished\"), React.createElement(_Radio.Button, {\n      value: \"complain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Complained\"))), React.createElement(MDBDataTable, {\n      responsive: true,\n      hover: true,\n      bordered: true,\n      data: {\n        columns: this.state.columns,\n        rows: this.state.contractData\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Contracts;","map":{"version":3,"sources":["/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Contracts/Contracts.js"],"names":["React","Component","Link","MDBDataTable","Card","CardBody","CardHeader","Col","LoadingOverlay","Text","Contracts","constructor","props","componentWillMount","token","JSON","parse","localStorage","getItem","setState","history","push","getBadge","status","getUsers","loading","requestOptions","method","headers","Authorization","state","response","fetch","contractData","handleResponse","statusFilter","filter","data","currentStatus","roleFilter","role","forEach","element","index","userLink","_id","date","Date","toLocaleString","actions","err","columns","label","field","sort","width","componentDidMount","text","then","ok","onChangeStatusFilter","e","target","value","onChangeRoleFilter","render","overlay","base","background","color","spinner","stroke","rows"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport { Card, CardBody, CardHeader, Col } from 'reactstrap';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Radio, Row, Typography, Button, Badge } from 'antd';\n\nconst { Text } = Typography;\n\nclass Contracts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n      loading: true,\n      contractData: [],\n      statusFilter: 'all',\n      roleFilter: 'all',\n      columns: [\n        {\n          label: 'ID',\n          field: '_id',\n          sort: 'asc',\n          width: 50\n        },\n        {\n          label: 'Student',\n          field: 'studentName',\n          sort: 'asc',\n          width: 150\n        },\n        {\n          label: 'Tutor',\n          field: 'tutorName',\n          sort: 'asc',\n          width: 150\n        },\n        {\n          label: 'Created',\n          field: 'contractCreationDate',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Status',\n          field: 'currentStatus',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n          sort: 'asc',\n          width: 150\n        }\n      ]\n    };\n  }\n\n  componentWillMount = async () => {\n    // const token = localStorage.removeItem(\"token\");\n    const token = JSON.parse(localStorage.getItem('token'));\n\n    if (token) {\n      this.setState({ token });\n    } else {\n      this.props.history.push('/login');\n    }\n  };\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  getBadge = status => {\n    return status === 'request'\n      ? 'success'\n      : status === 'finished'\n      ? 'default'\n      : status === 'complain'\n      ? 'error'\n      : 'primary';\n  };\n\n  getUsers = async () => {\n    this.setState({ loading: true });\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.state.token}`\n      }\n    };\n    try {\n      const response = await fetch(\n        'https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/contracts',\n        requestOptions\n      );\n\n      let contractData = await this.handleResponse(response);\n\n      if (this.state.statusFilter !== 'all') {\n        contractData = contractData.filter(\n          data => data.currentStatus === this.state.statusFilter\n        );\n      }\n      if (this.state.roleFilter !== 'all') {\n        contractData = contractData.filter(\n          data => data.role === this.state.roleFilter\n        );\n      }\n\n      contractData.forEach((element, index) => {\n        const userLink = `/contracts/${element._id}`;\n        // element.name = <Link to={userLink}>{element.name}</Link>;\n        // element.email = <Link to={userLink}>{element.email}</Link>;\n        let date = new Date(element.date);\n\n        element._id = index + 1;\n        element.currentStatus = (\n          <Link to={userLink}>\n            <Badge\n              status={this.getBadge(element.currentStatus)}\n              text={element.currentStatus}\n            ></Badge>\n          </Link>\n        );\n        element.date = date.toLocaleString();\n        element.actions = (\n          <div>\n            <Button type=\"primary\" to={userLink}>\n              <Link to={userLink}>View</Link>\n            </Button>\n          </div>\n        );\n      });\n\n      this.setState({ loading: false, contractData: contractData });\n      return contractData;\n    } catch (err) {\n      return err;\n    }\n  };\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n        if (response.status === 401) {\n          // auto logout if 401 response returned from api\n          // logoutUser();\n        }\n\n        // const error = (data && data.message) || response.statusText;\n        // return Promise.reject(error);\n        return data;\n      }\n      return data;\n    });\n  }\n\n  onChangeStatusFilter(e) {\n    this.setState({ statusFilter: e.target.value });\n    //this.onFilterOut();\n    this.getUsers();\n  }\n  onChangeRoleFilter(e) {\n    this.setState({ roleFilter: e.target.value });\n    this.getUsers();\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <LoadingOverlay\n          active={this.state.loading}\n          spinner\n          text=\"Loading...\"\n          styles={{\n            overlay: base => ({\n              ...base,\n              background: 'rgba(255, 255, 255, 0.5)',\n              color: 'black'\n            }),\n            spinner: base => ({\n              ...base,\n              width: '100px',\n              '& svg circle': {\n                stroke: 'rgba(255, 0, 0, 0.5)'\n              }\n            })\n          }}\n        >\n          <Row>\n            <Col xl={12}>\n              <Card>\n                <CardHeader className=\"bg-dark\">\n                  <i className=\"fa fa-align-justify\"></i>Users{'  '}\n                  <small className=\"text-muted\">user database</small>\n                </CardHeader>\n                <CardBody>\n                  <Row className=\"mt-2\" type=\"flex\" justify=\"end\">\n                    <Radio.Group\n                      defaultValue=\"a\"\n                      size=\"small\"\n                      buttonStyle=\"solid\"\n                      onChange={e => this.onChangeRoleFilter(e)}\n                      value={this.state.roleFilter}\n                      className=\"mr-4\"\n                    >\n                      <Radio.Button value=\"all\">All</Radio.Button>\n                      <Radio.Button value=\"student\">Student</Radio.Button>\n                      <Radio.Button value=\"tutor\">Tutor</Radio.Button>\n                    </Radio.Group>\n                    <Radio.Group\n                      defaultValue=\"a\"\n                      size=\"small\"\n                      buttonStyle=\"solid\"\n                      onChange={e => this.onChangeStatusFilter(e)}\n                      value={this.state.statusFilter}\n                    >\n                      <Radio.Button value=\"all\">All</Radio.Button>\n                      <Radio.Button value=\"request\">Requesting</Radio.Button>\n                      <Radio.Button value=\"finished\">Finished</Radio.Button>\n                      <Radio.Button value=\"complain\">Complained</Radio.Button>\n                    </Radio.Group>\n                  </Row>\n                  <MDBDataTable\n                    responsive\n                    hover\n                    bordered\n                    data={{\n                      columns: this.state.columns,\n                      rows: this.state.contractData\n                    }}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\n\nexport default Contracts;\n"]},"metadata":{},"sourceType":"module"}