{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport _objectSpread from \"/Users/trongledo/Documents/GitHub/tutor-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Accounts/Accounts.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport { Card, CardBody, CardHeader, Col } from 'reactstrap';\nimport LoadingOverlay from 'react-loading-overlay';\nconst Text = _Typography.Text;\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getBadge = status => {\n      return status === 'active' ? 'success' : status === 'inactive' ? 'secondary' : status === 'pending' ? 'warning' : status === 'banned' ? 'danger' : 'primary';\n    };\n\n    this.getUsers = async () => {\n      this.setState({\n        loading: true\n      });\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySUQiOiI1ZGU1ZTE1YjJkMDY1NjFkNDc2MjA0MmUiLCJyb2xlIjoibWFzdGVyIiwiaWF0IjoxNTc1ODgyNjc1fQ.gRjIyKO6wb0N5QVa5kHuXsWTF7c_GUmNsVkagvNsk2U`\n        }\n      };\n\n      try {\n        const response = await fetch('https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/admin', requestOptions);\n        let userData = await this.handleResponse(response);\n\n        if (this.state.roleFilter !== 'all') {\n          userData = userData.filter(data => data.role === this.state.roleFilter);\n        }\n\n        userData.forEach((element, index) => {\n          let date = new Date(element.date);\n          element._id = index + 1;\n          element.date = date.toLocaleDateString();\n          element.picture = React.createElement(\"img\", {\n            src: element.picture,\n            style: {\n              height: 50,\n              width: 50,\n              objectFit: 'cover',\n              borderRadius: 25\n            },\n            alt: \"profile\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          });\n          element.actions = React.createElement(\"div\", {\n            className: \"float-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, React.createElement(_Button, {\n            className: \"mr-2\",\n            onClick: () => this.toggleEditItem(element),\n            type: \"primary\",\n            icon: \"edit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, \"Edit\"), React.createElement(_Button, {\n            onClick: () => this.toggleDeleteItem(element),\n            type: \"danger\",\n            icon: \"delete\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, \"Delete\"));\n        });\n        this.setState({\n          loading: false,\n          userData: userData\n        });\n        return userData;\n      } catch (err) {\n        return err;\n      }\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        modalVisible: false\n      });\n    };\n\n    this.state = {\n      loading: true,\n      modalVisible: false,\n      userData: [],\n      roleFilter: 'all',\n      columns: [{\n        label: 'ID',\n        field: '_id',\n        sort: 'asc',\n        width: 50\n      }, {\n        label: 'Picture',\n        field: 'picture',\n        sort: 'asc',\n        width: 100\n      }, {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc',\n        width: 150\n      }, {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 150\n      }, {\n        label: 'Registered',\n        field: 'date',\n        sort: 'asc',\n        width: 100\n      }, {\n        label: 'Role',\n        field: 'role',\n        sort: 'asc',\n        width: 100\n      }, {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 100\n      }, {\n        label: 'Actions',\n        field: 'actions',\n        sort: 'asc',\n        width: 100\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        if (response.status === 401) {} // auto logout if 401 response returned from api\n        // logoutUser();\n        // const error = (data && data.message) || response.statusText;\n        // return Promise.reject(error);\n\n\n        return data;\n      }\n\n      return data;\n    });\n  }\n\n  onChangeRoleFilter(e) {\n    this.setState({\n      roleFilter: e.target.value\n    });\n    this.getUsers();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(LoadingOverlay, {\n      active: this.state.loading,\n      spinner: true,\n      text: \"Loading...\",\n      styles: {\n        overlay: base => _objectSpread({}, base, {\n          background: 'rgba(255, 255, 255, 0.5)',\n          color: 'black'\n        }),\n        spinner: base => _objectSpread({}, base, {\n          width: '100px',\n          '& svg circle': {\n            stroke: 'rgba(255, 0, 0, 0.5)'\n          }\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xl: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-align-justify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), \"Users\", '  ', React.createElement(\"small\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"user database\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(_Modal, {\n      title: \"Title\",\n      visible: this.state.modalVisible,\n      onOk: \"\",\n      confirmLoading: \"\",\n      onCancel: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Test\")), React.createElement(_Row, {\n      className: \"mt-2\",\n      type: \"flex\",\n      justify: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(_Radio.Group, {\n      defaultValue: \"a\",\n      size: \"small\",\n      buttonStyle: \"solid\",\n      onChange: e => this.onChangeRoleFilter(e),\n      value: this.state.roleFilter,\n      className: \"mr-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(_Radio.Button, {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"All\"), React.createElement(_Radio.Button, {\n      value: \"master\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Master\"), React.createElement(_Radio.Button, {\n      value: \"admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Admin\")), React.createElement(_Button, {\n      type: \"primary\",\n      icon: \"user-add\",\n      style: {\n        backgroundColor: '#00d77d',\n        borderColor: '#00d77d'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Create\")), React.createElement(MDBDataTable, {\n      responsive: true,\n      hover: true,\n      bordered: true,\n      data: {\n        columns: this.state.columns,\n        rows: this.state.userData\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Accounts;","map":{"version":3,"sources":["/Users/trongledo/Documents/GitHub/tutor-admin/src/views/Accounts/Accounts.js"],"names":["React","Component","Link","MDBDataTable","Card","CardBody","CardHeader","Col","LoadingOverlay","Text","Accounts","constructor","props","getBadge","status","getUsers","setState","loading","requestOptions","method","headers","Authorization","response","fetch","userData","handleResponse","state","roleFilter","filter","data","role","forEach","element","index","date","Date","_id","toLocaleDateString","picture","height","width","objectFit","borderRadius","actions","toggleEditItem","toggleDeleteItem","err","handleCancel","modalVisible","columns","label","field","sort","componentDidMount","text","then","JSON","parse","ok","onChangeRoleFilter","e","target","value","render","overlay","base","background","color","spinner","stroke","backgroundColor","borderColor","rows"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport { Card, CardBody, CardHeader, Col } from 'reactstrap';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Radio, Row, Typography, Button, Modal } from 'antd';\n\nconst { Text } = Typography;\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      modalVisible: false,\n      userData: [],\n      roleFilter: 'all',\n      columns: [\n        {\n          label: 'ID',\n          field: '_id',\n          sort: 'asc',\n          width: 50\n        },\n        {\n          label: 'Picture',\n          field: 'picture',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Name',\n          field: 'name',\n          sort: 'asc',\n          width: 150\n        },\n        {\n          label: 'Email',\n          field: 'email',\n          sort: 'asc',\n          width: 150\n        },\n        {\n          label: 'Registered',\n          field: 'date',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Role',\n          field: 'role',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Address',\n          field: 'address',\n          sort: 'asc',\n          width: 100\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n          sort: 'asc',\n          width: 100\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  getBadge = status => {\n    return status === 'active'\n      ? 'success'\n      : status === 'inactive'\n      ? 'secondary'\n      : status === 'pending'\n      ? 'warning'\n      : status === 'banned'\n      ? 'danger'\n      : 'primary';\n  };\n\n  getUsers = async () => {\n    this.setState({ loading: true });\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySUQiOiI1ZGU1ZTE1YjJkMDY1NjFkNDc2MjA0MmUiLCJyb2xlIjoibWFzdGVyIiwiaWF0IjoxNTc1ODgyNjc1fQ.gRjIyKO6wb0N5QVa5kHuXsWTF7c_GUmNsVkagvNsk2U`\n      }\n    };\n    try {\n      const response = await fetch(\n        'https://cors-anywhere.herokuapp.com/https://admin-api-tutor.herokuapp.com/me/admin',\n        requestOptions\n      );\n\n      let userData = await this.handleResponse(response);\n\n      if (this.state.roleFilter !== 'all') {\n        userData = userData.filter(data => data.role === this.state.roleFilter);\n      }\n\n      userData.forEach((element, index) => {\n        let date = new Date(element.date);\n        element._id = index + 1;\n        element.date = date.toLocaleDateString();\n        element.picture = (\n          <img\n            src={element.picture}\n            style={{\n              height: 50,\n              width: 50,\n              objectFit: 'cover',\n              borderRadius: 25\n            }}\n            alt=\"profile\"\n          />\n        );\n        element.actions = (\n          <div className=\"float-right\">\n            <Button\n              className=\"mr-2\"\n              onClick={() => this.toggleEditItem(element)}\n              type=\"primary\"\n              icon=\"edit\"\n            >\n              Edit\n            </Button>\n            <Button\n              onClick={() => this.toggleDeleteItem(element)}\n              type=\"danger\"\n              icon=\"delete\"\n            >\n              Delete\n            </Button>\n          </div>\n        );\n      });\n\n      this.setState({ loading: false, userData: userData });\n      return userData;\n    } catch (err) {\n      return err;\n    }\n  };\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n        if (response.status === 401) {\n          // auto logout if 401 response returned from api\n          // logoutUser();\n        }\n\n        // const error = (data && data.message) || response.statusText;\n        // return Promise.reject(error);\n        return data;\n      }\n      return data;\n    });\n  }\n\n  onChangeRoleFilter(e) {\n    this.setState({ roleFilter: e.target.value });\n    this.getUsers();\n  }\n\n  handleCancel = () => {\n    this.setState({\n      modalVisible: false\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <LoadingOverlay\n          active={this.state.loading}\n          spinner\n          text=\"Loading...\"\n          styles={{\n            overlay: base => ({\n              ...base,\n              background: 'rgba(255, 255, 255, 0.5)',\n              color: 'black'\n            }),\n            spinner: base => ({\n              ...base,\n              width: '100px',\n              '& svg circle': {\n                stroke: 'rgba(255, 0, 0, 0.5)'\n              }\n            })\n          }}\n        >\n          <Row>\n            <Col xl={12}>\n              <Card>\n                <CardHeader className=\"bg-dark\">\n                  <i className=\"fa fa-align-justify\"></i>Users{'  '}\n                  <small className=\"text-muted\">user database</small>\n                </CardHeader>\n                <CardBody>\n                  <Modal\n                    title=\"Title\"\n                    visible={this.state.modalVisible}\n                    onOk=\"\"\n                    confirmLoading=\"\"\n                    onCancel={this.handleCancel}\n                  >\n                    <p>Test</p>\n                  </Modal>\n                  <Row className=\"mt-2\" type=\"flex\" justify=\"end\">\n                    <Radio.Group\n                      defaultValue=\"a\"\n                      size=\"small\"\n                      buttonStyle=\"solid\"\n                      onChange={e => this.onChangeRoleFilter(e)}\n                      value={this.state.roleFilter}\n                      className=\"mr-4\"\n                    >\n                      <Radio.Button value=\"all\">All</Radio.Button>\n                      <Radio.Button value=\"master\">Master</Radio.Button>\n                      <Radio.Button value=\"admin\">Admin</Radio.Button>\n                    </Radio.Group>\n                    <Button\n                      type=\"primary\"\n                      icon=\"user-add\"\n                      style={{\n                        backgroundColor: '#00d77d',\n                        borderColor: '#00d77d'\n                      }}\n                    >\n                      Create\n                    </Button>\n                  </Row>\n                  <MDBDataTable\n                    responsive\n                    hover\n                    bordered\n                    data={{\n                      columns: this.state.columns,\n                      rows: this.state.userData\n                    }}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\n\nexport default Accounts;\n"]},"metadata":{},"sourceType":"module"}